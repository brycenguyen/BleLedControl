; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\_build\nrf_adv_conn.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\nrf_adv_conn.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\include -I..\..\..\rbc_mesh -I..\..\..\rbc_mesh\include -I..\..\..\SDK\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\config -I..\..\..\..\..\..\components\drivers_nrf\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\7.2.1\Device\Include -D__MICROLIB -DNRF51 -DBOARD_RHC -DNRF51 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\nrf_adv_conn.crf ..\nrf_adv_conn.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  ble_gatts_event_handler PROC
;;;88      
;;;89     static void ble_gatts_event_handler(ble_evt_t* evt)
000000  b510              PUSH     {r4,lr}
;;;90     {
000002  4604              MOV      r4,r0
;;;91         switch (evt->header.evt_id)
000004  8820              LDRH     r0,[r4,#0]
000006  2850              CMP      r0,#0x50
000008  d00b              BEQ      |L1.34|
00000a  2851              CMP      r0,#0x51
00000c  d002              BEQ      |L1.20|
00000e  2852              CMP      r0,#0x52
000010  d108              BNE      |L1.36|
000012  e000              B        |L1.22|
                  |L1.20|
;;;92         {
;;;93         case BLE_GATTS_EVT_RW_AUTHORIZE_REQUEST:
;;;94             break;
000014  e007              B        |L1.38|
                  |L1.22|
;;;95     
;;;96         case BLE_GATTS_EVT_SYS_ATTR_MISSING:
;;;97             sd_ble_gatts_sys_attr_set(evt->evt.gatts_evt.conn_handle, NULL, 0, 0);
000016  88a0              LDRH     r0,[r4,#4]
000018  2300              MOVS     r3,#0
00001a  461a              MOV      r2,r3
00001c  4619              MOV      r1,r3
00001e  dfa9              SVC      #0xa9
;;;98             break;
000020  e001              B        |L1.38|
                  |L1.34|
;;;99     
;;;100        case BLE_GATTS_EVT_WRITE:
;;;101            break;
000022  e000              B        |L1.38|
                  |L1.36|
;;;102    
;;;103        default:
;;;104            break;
000024  bf00              NOP      
                  |L1.38|
000026  bf00              NOP                            ;94
;;;105        }
;;;106    }
000028  bd10              POP      {r4,pc}
;;;107    
                          ENDP

                  ble_gap_event_handler PROC
;;;108    static void ble_gap_event_handler(ble_evt_t* evt)
00002a  b570              PUSH     {r4-r6,lr}
;;;109    {
00002c  4604              MOV      r4,r0
;;;110        switch (evt->header.evt_id)
00002e  8820              LDRH     r0,[r4,#0]
000030  3810              SUBS     r0,r0,#0x10
000032  0003              MOVS     r3,r0
000034  f7fffffe          BL       __ARM_common_switch8
000038  0906071e          DCB      0x09,0x06,0x07,0x1e
00003c  0a1e1e1e          DCB      0x0a,0x1e,0x1e,0x1e
000040  1d1c1e00          DCB      0x1d,0x1c,0x1e,0x00
;;;111        {
;;;112        case BLE_GAP_EVT_CONNECTED:
;;;113            break;
000044  e017              B        |L1.118|
;;;114    
;;;115        case BLE_GAP_EVT_DISCONNECTED:
;;;116              sd_ble_gap_adv_start(&ble_adv_params);
000046  484a              LDR      r0,|L1.368|
000048  df73              SVC      #0x73
;;;117              break;
00004a  e014              B        |L1.118|
;;;118    
;;;119        case BLE_GAP_EVT_SEC_PARAMS_REQUEST:
;;;120              APP_ERROR_CHECK(sd_ble_gap_sec_params_reply(evt->evt.gap_evt.conn_handle,
00004c  bf00              NOP      
00004e  88a0              LDRH     r0,[r4,#4]
000050  2300              MOVS     r3,#0
000052  4a48              LDR      r2,|L1.372|
000054  4619              MOV      r1,r3
000056  df7f              SVC      #0x7f
000058  4605              MOV      r5,r0
00005a  2d00              CMP      r5,#0
00005c  d006              BEQ      |L1.108|
00005e  bf00              NOP      
000060  2200              MOVS     r2,#0
000062  4611              MOV      r1,r2
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       app_error_handler
00006a  bf00              NOP      
                  |L1.108|
00006c  bf00              NOP      
;;;121                BLE_GAP_SEC_STATUS_SUCCESS, &ble_gap_bond_params, NULL));
;;;122              break;
00006e  e002              B        |L1.118|
;;;123    
;;;124        case BLE_GAP_EVT_CONN_SEC_UPDATE:
;;;125            break;
000070  e001              B        |L1.118|
;;;126          
;;;127        case BLE_GAP_EVT_AUTH_STATUS:
;;;128            break;
000072  e000              B        |L1.118|
;;;129    
;;;130        default:
;;;131            break;
000074  bf00              NOP      
                  |L1.118|
000076  bf00              NOP                            ;113
;;;132        }
;;;133    }
000078  bd70              POP      {r4-r6,pc}
;;;134    
                          ENDP

                  nrf_adv_conn_init PROC
;;;138    
;;;139    void nrf_adv_conn_init(void)
00007a  b570              PUSH     {r4-r6,lr}
;;;140    {
00007c  b094              SUB      sp,sp,#0x50
;;;141        uint32_t error_code;
;;;142        int8_t        tx_power_level = 4;
00007e  2004              MOVS     r0,#4
000080  9013              STR      r0,[sp,#0x4c]
;;;143        
;;;144        /* Fill advertisement data struct: */
;;;145        uint8_t flags = BLE_GAP_ADV_FLAG_BR_EDR_NOT_SUPPORTED;
000082  2604              MOVS     r6,#4
;;;146    //    uint8_t flags = BLE_GAP_ADV_FLAG_LE_GENERAL_DISC_MODE;
;;;147    
;;;148        memset(&ble_adv_data, 0, sizeof(ble_adv_data));
000084  2130              MOVS     r1,#0x30
000086  483c              LDR      r0,|L1.376|
000088  f7fffffe          BL       __aeabi_memclr4
;;;149    
;;;150        ble_adv_data.flags = flags;
00008c  483a              LDR      r0,|L1.376|
00008e  70c6              STRB     r6,[r0,#3]
;;;151        ble_adv_data.name_type    = BLE_ADVDATA_FULL_NAME;
000090  2002              MOVS     r0,#2
000092  4939              LDR      r1,|L1.376|
000094  7008              STRB     r0,[r1,#0]
;;;152        ble_adv_data.p_tx_power_level = &tx_power_level;
000096  a813              ADD      r0,sp,#0x4c
000098  6048              STR      r0,[r1,#4]  ; ble_adv_data
;;;153        //ble_adv_data.p_manuf_specific_data = &man_data;
;;;154    
;;;155        ble_gap_conn_sec_mode_t name_sec_mode = {1, 1};
00009a  4838              LDR      r0,|L1.380|
00009c  6800              LDR      r0,[r0,#0]  ; <Data3>
00009e  9012              STR      r0,[sp,#0x48]
;;;156        ble_gap_addr_t my_addr;
;;;157        
;;;158        error_code = sd_ble_gap_address_get(&my_addr);
0000a0  a810              ADD      r0,sp,#0x40
0000a2  df71              SVC      #0x71
0000a4  4604              MOV      r4,r0
;;;159        APP_ERROR_CHECK(error_code);
0000a6  bf00              NOP      
0000a8  4625              MOV      r5,r4
0000aa  2d00              CMP      r5,#0
0000ac  d006              BEQ      |L1.188|
0000ae  bf00              NOP      
0000b0  2200              MOVS     r2,#0
0000b2  4611              MOV      r1,r2
0000b4  4628              MOV      r0,r5
0000b6  f7fffffe          BL       app_error_handler
0000ba  bf00              NOP      
                  |L1.188|
0000bc  bf00              NOP      
;;;160        
;;;161        char name[64];
;;;162        sprintf(name, "DEN RGB DEMO 1 #%02x%02x", my_addr.addr[5], my_addr.addr[4]);
0000be  a810              ADD      r0,sp,#0x40
0000c0  7943              LDRB     r3,[r0,#5]
0000c2  7982              LDRB     r2,[r0,#6]
0000c4  a12e              ADR      r1,|L1.384|
0000c6  4668              MOV      r0,sp
0000c8  f7fffffe          BL       __2sprintf
;;;163            //((uint16_t) my_addr.addr[4] << 8) | (my_addr.addr[5]));
;;;164        
;;;165        error_code = sd_ble_gap_device_name_set(&name_sec_mode, (uint8_t*) name, strlen(name));
0000cc  4668              MOV      r0,sp
0000ce  f7fffffe          BL       strlen
0000d2  b285              UXTH     r5,r0
0000d4  462a              MOV      r2,r5
0000d6  4669              MOV      r1,sp
0000d8  a812              ADD      r0,sp,#0x48
0000da  df7c              SVC      #0x7c
0000dc  4604              MOV      r4,r0
;;;166        APP_ERROR_CHECK(error_code);
0000de  bf00              NOP      
0000e0  4625              MOV      r5,r4
0000e2  2d00              CMP      r5,#0
0000e4  d006              BEQ      |L1.244|
0000e6  bf00              NOP      
0000e8  2200              MOVS     r2,#0
0000ea  4611              MOV      r1,r2
0000ec  4628              MOV      r0,r5
0000ee  f7fffffe          BL       app_error_handler
0000f2  bf00              NOP      
                  |L1.244|
0000f4  bf00              NOP      
;;;167        
;;;168        /* Set advertisement data with ble_advdata-lib */
;;;169        error_code = ble_advdata_set(&ble_adv_data, NULL);
0000f6  2100              MOVS     r1,#0
0000f8  481f              LDR      r0,|L1.376|
0000fa  f7fffffe          BL       ble_advdata_set
0000fe  4604              MOV      r4,r0
;;;170        APP_ERROR_CHECK(error_code);
000100  bf00              NOP      
000102  4625              MOV      r5,r4
000104  2d00              CMP      r5,#0
000106  d006              BEQ      |L1.278|
000108  bf00              NOP      
00010a  2200              MOVS     r2,#0
00010c  4611              MOV      r1,r2
00010e  4628              MOV      r0,r5
000110  f7fffffe          BL       app_error_handler
000114  bf00              NOP      
                  |L1.278|
000116  bf00              NOP      
;;;171    
;;;172        /* Start advertising */
;;;173        error_code = sd_ble_gap_adv_start(&ble_adv_params);
000118  4815              LDR      r0,|L1.368|
00011a  df73              SVC      #0x73
00011c  4604              MOV      r4,r0
;;;174        APP_ERROR_CHECK(error_code);
00011e  bf00              NOP      
000120  4625              MOV      r5,r4
000122  2d00              CMP      r5,#0
000124  d006              BEQ      |L1.308|
000126  bf00              NOP      
000128  2200              MOVS     r2,#0
00012a  4611              MOV      r1,r2
00012c  4628              MOV      r0,r5
00012e  f7fffffe          BL       app_error_handler
000132  bf00              NOP      
                  |L1.308|
000134  bf00              NOP      
;;;175    }
000136  b014              ADD      sp,sp,#0x50
000138  bd70              POP      {r4-r6,pc}
;;;176    
                          ENDP

                  nrf_adv_conn_evt_handler PROC
;;;177    
;;;178    void nrf_adv_conn_evt_handler(ble_evt_t* evt)
00013a  b510              PUSH     {r4,lr}
;;;179    {
00013c  4604              MOV      r4,r0
;;;180        if (rbc_mesh_ble_evt_handler(evt) == NRF_SUCCESS)
00013e  4620              MOV      r0,r4
000140  f7fffffe          BL       rbc_mesh_ble_evt_handler
000144  2800              CMP      r0,#0
000146  d111              BNE      |L1.364|
;;;181        {
;;;182            
;;;183            switch (evt->header.evt_id & 0xF0)
000148  8820              LDRH     r0,[r4,#0]
00014a  21f0              MOVS     r1,#0xf0
00014c  4008              ANDS     r0,r0,r1
00014e  2810              CMP      r0,#0x10
000150  d002              BEQ      |L1.344|
000152  2850              CMP      r0,#0x50
000154  d108              BNE      |L1.360|
000156  e003              B        |L1.352|
                  |L1.344|
;;;184            {
;;;185            case BLE_GAP_EVT_BASE:
;;;186                ble_gap_event_handler(evt);
000158  4620              MOV      r0,r4
00015a  f7fffffe          BL       ble_gap_event_handler
;;;187                break;
00015e  e004              B        |L1.362|
                  |L1.352|
;;;188    
;;;189            case BLE_GATTS_EVT_BASE:
;;;190                ble_gatts_event_handler(evt);
000160  4620              MOV      r0,r4
000162  f7fffffe          BL       ble_gatts_event_handler
;;;191                break;
000166  e000              B        |L1.362|
                  |L1.360|
;;;192    
;;;193            default:
;;;194                break;
000168  bf00              NOP      
                  |L1.362|
00016a  bf00              NOP                            ;187
                  |L1.364|
;;;195            }
;;;196        }
;;;197    }
00016c  bd10              POP      {r4,pc}
                          ENDP

00016e  0000              DCW      0x0000
                  |L1.368|
                          DCD      ble_adv_params
                  |L1.372|
                          DCD      ble_gap_bond_params
                  |L1.376|
                          DCD      ble_adv_data
                  |L1.380|
                          DCD      ||.constdata||
                  |L1.384|
000180  44454e20          DCB      "DEN RGB DEMO 1 #%02x%02x",0
000184  52474220
000188  44454d4f
00018c  20312023
000190  25303278
000194  25303278
000198  00      
000199  00                DCB      0
00019a  00                DCB      0
00019b  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ble_adv_data
                          %        48

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  11                DCB      0x11

                          AREA ||.data||, DATA, ALIGN=2

                  ble_adv_params
000000  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000008  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000010  01400000          DCW      0x0140,0x0000
000014  00000000          DCB      0x00,0x00,0x00,0x00
                  ble_gap_bond_params
000018  0c071000          DCB      0x0c,0x07,0x10,0x00
00001c  00                DCB      0x00

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L17.24|
                  |L17.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L17.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L17.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\nrf_adv_conn.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_nrf_adv_conn_c_cc2b026a____REV16|
#line 129 "..\\..\\..\\..\\..\\..\\components\\toolchain\\gcc\\core_cmInstr.h"
|__asm___14_nrf_adv_conn_c_cc2b026a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_nrf_adv_conn_c_cc2b026a____REVSH|
#line 144
|__asm___14_nrf_adv_conn_c_cc2b026a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
