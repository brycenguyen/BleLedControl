; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\_build\event_handler.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\event_handler.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\include -I..\..\..\rbc_mesh -I..\..\..\rbc_mesh\include -I..\..\..\SDK\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\config -I..\..\..\..\..\..\components\drivers_nrf\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\7.2.1\Device\Include -D__MICROLIB -DNRF51 -DBOARD_RHC -DNRF51 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\event_handler.crf ..\..\..\rbc_mesh\src\event_handler.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  async_event_execute PROC
;;;52     */
;;;53     static void async_event_execute(async_event_t* evt)
000000  b570              PUSH     {r4-r6,lr}
;;;54     {
000002  4604              MOV      r4,r0
;;;55     
;;;56         switch (evt->type)
000004  7820              LDRB     r0,[r4,#0]
000006  0003              MOVS     r3,r0
000008  f7fffffe          BL       __ARM_common_switch8
00000c  0533041c          DCB      0x05,0x33,0x04,0x1c
000010  4a616500          DCB      0x4a,0x61,0x65,0x00
;;;57         {
;;;58             case EVENT_TYPE_RADIO_RX:
;;;59                 CHECK_FP(evt->callback.radio_rx.function);
000014  2103              MOVS     r1,#3
000016  03c9              LSLS     r1,r1,#15
000018  6860              LDR      r0,[r4,#4]
00001a  4288              CMP      r0,r1
00001c  d304              BCC      |L1.40|
00001e  2101              MOVS     r1,#1
000020  0749              LSLS     r1,r1,#29
000022  6860              LDR      r0,[r4,#4]
000024  4288              CMP      r0,r1
000026  d909              BLS      |L1.60|
                  |L1.40|
000028  bf00              NOP      
00002a  2510              MOVS     r5,#0x10
00002c  bf00              NOP      
00002e  2200              MOVS     r2,#0
000030  4611              MOV      r1,r2
000032  2010              MOVS     r0,#0x10
000034  f7fffffe          BL       app_error_handler
000038  bf00              NOP      
00003a  bf00              NOP      
                  |L1.60|
;;;60                 (*evt->callback.radio_rx.function)(evt->callback.radio_rx.data);
00003c  6861              LDR      r1,[r4,#4]
00003e  68a0              LDR      r0,[r4,#8]
000040  4788              BLX      r1
;;;61                 break;
000042  e049              B        |L1.216|
;;;62             case EVENT_TYPE_RADIO_TX:
;;;63                 CHECK_FP(evt->callback.radio_tx);
000044  2103              MOVS     r1,#3
000046  03c9              LSLS     r1,r1,#15
000048  6860              LDR      r0,[r4,#4]
00004a  4288              CMP      r0,r1
00004c  d304              BCC      |L1.88|
00004e  2101              MOVS     r1,#1
000050  0749              LSLS     r1,r1,#29
000052  6860              LDR      r0,[r4,#4]
000054  4288              CMP      r0,r1
000056  d909              BLS      |L1.108|
                  |L1.88|
000058  bf00              NOP      
00005a  2510              MOVS     r5,#0x10
00005c  bf00              NOP      
00005e  2200              MOVS     r2,#0
000060  4611              MOV      r1,r2
000062  2010              MOVS     r0,#0x10
000064  f7fffffe          BL       app_error_handler
000068  bf00              NOP      
00006a  bf00              NOP      
                  |L1.108|
;;;64                 (*evt->callback.radio_tx)();
00006c  6860              LDR      r0,[r4,#4]
00006e  4780              BLX      r0
;;;65                 break;
000070  e032              B        |L1.216|
;;;66             case EVENT_TYPE_TIMER:
;;;67                 CHECK_FP(evt->callback.timer);
000072  2103              MOVS     r1,#3
000074  03c9              LSLS     r1,r1,#15
000076  6860              LDR      r0,[r4,#4]
000078  4288              CMP      r0,r1
00007a  d304              BCC      |L1.134|
00007c  2101              MOVS     r1,#1
00007e  0749              LSLS     r1,r1,#29
000080  6860              LDR      r0,[r4,#4]
000082  4288              CMP      r0,r1
000084  d909              BLS      |L1.154|
                  |L1.134|
000086  bf00              NOP      
000088  2510              MOVS     r5,#0x10
00008a  bf00              NOP      
00008c  2200              MOVS     r2,#0
00008e  4611              MOV      r1,r2
000090  2010              MOVS     r0,#0x10
000092  f7fffffe          BL       app_error_handler
000096  bf00              NOP      
000098  bf00              NOP      
                  |L1.154|
;;;68                 (*evt->callback.timer)();
00009a  6860              LDR      r0,[r4,#4]
00009c  4780              BLX      r0
;;;69                 break;
00009e  e01b              B        |L1.216|
;;;70             case EVENT_TYPE_GENERIC:
;;;71                 CHECK_FP(evt->callback.generic);
0000a0  2103              MOVS     r1,#3
0000a2  03c9              LSLS     r1,r1,#15
0000a4  6860              LDR      r0,[r4,#4]
0000a6  4288              CMP      r0,r1
0000a8  d304              BCC      |L1.180|
0000aa  2101              MOVS     r1,#1
0000ac  0749              LSLS     r1,r1,#29
0000ae  6860              LDR      r0,[r4,#4]
0000b0  4288              CMP      r0,r1
0000b2  d909              BLS      |L1.200|
                  |L1.180|
0000b4  bf00              NOP      
0000b6  2510              MOVS     r5,#0x10
0000b8  bf00              NOP      
0000ba  2200              MOVS     r2,#0
0000bc  4611              MOV      r1,r2
0000be  2010              MOVS     r0,#0x10
0000c0  f7fffffe          BL       app_error_handler
0000c4  bf00              NOP      
0000c6  bf00              NOP      
                  |L1.200|
;;;72                 (*evt->callback.generic)();
0000c8  6860              LDR      r0,[r4,#4]
0000ca  4780              BLX      r0
;;;73                 break;
0000cc  e004              B        |L1.216|
;;;74             case EVENT_TYPE_PACKET:
;;;75                 TICK_PIN(19);
;;;76                 mesh_srv_packet_process(&evt->callback.packet);
0000ce  1d20              ADDS     r0,r4,#4
0000d0  f7fffffe          BL       mesh_srv_packet_process
;;;77             default:
0000d4  bf00              NOP      
;;;78                 break;
0000d6  bf00              NOP      
                  |L1.216|
0000d8  bf00              NOP                            ;61
;;;79         }
;;;80     }
0000da  bd70              POP      {r4-r6,pc}
;;;81     
                          ENDP

                  event_fifo_pop PROC
;;;82     static bool event_fifo_pop(fifo_t* evt_fifo)
0000dc  b530              PUSH     {r4,r5,lr}
;;;83     {
0000de  b08d              SUB      sp,sp,#0x34
0000e0  4604              MOV      r4,r0
;;;84         async_event_t evt;
;;;85         uint32_t error_code = fifo_pop(evt_fifo, &evt);
0000e2  a901              ADD      r1,sp,#4
0000e4  4620              MOV      r0,r4
0000e6  f7fffffe          BL       fifo_pop
0000ea  4605              MOV      r5,r0
;;;86         if (error_code == NRF_SUCCESS)
0000ec  2d00              CMP      r5,#0
0000ee  d105              BNE      |L1.252|
;;;87         {
;;;88             async_event_execute(&evt);
0000f0  a801              ADD      r0,sp,#4
0000f2  f7fffffe          BL       async_event_execute
;;;89             return true;
0000f6  2001              MOVS     r0,#1
                  |L1.248|
;;;90         }
;;;91         
;;;92         return false;
;;;93     }
0000f8  b00d              ADD      sp,sp,#0x34
0000fa  bd30              POP      {r4,r5,pc}
                  |L1.252|
0000fc  2000              MOVS     r0,#0                 ;92
0000fe  e7fb              B        |L1.248|
;;;94     
                          ENDP

                  SWI0_IRQHandler PROC
;;;97     */
;;;98     void SWI0_IRQHandler(void)
000100  b510              PUSH     {r4,lr}
;;;99     {
;;;100        TICK_PIN(4);
;;;101        while (true)
000102  e013              B        |L1.300|
                  |L1.260|
;;;102        {
;;;103            bool got_evt = false;
000104  2400              MOVS     r4,#0
;;;104            
;;;105            got_evt |= event_fifo_pop(&g_async_evt_fifo);
000106  4855              LDR      r0,|L1.604|
000108  f7fffffe          BL       event_fifo_pop
00010c  4304              ORRS     r4,r4,r0
;;;106            
;;;107            if (timeslot_get_end_time() > 0) /* in timeslot */
00010e  f7fffffe          BL       timeslot_get_end_time
000112  2300              MOVS     r3,#0
000114  4058              EORS     r0,r0,r3
000116  4059              EORS     r1,r1,r3
000118  4308              ORRS     r0,r0,r1
00011a  d003              BEQ      |L1.292|
;;;108            {
;;;109                got_evt |= event_fifo_pop(&g_async_evt_fifo_ts);
00011c  4850              LDR      r0,|L1.608|
00011e  f7fffffe          BL       event_fifo_pop
000122  4304              ORRS     r4,r4,r0
                  |L1.292|
;;;110            }
;;;111            
;;;112            if (!got_evt)
000124  2c00              CMP      r4,#0
000126  d100              BNE      |L1.298|
;;;113            {
;;;114                break;
000128  e001              B        |L1.302|
                  |L1.298|
;;;115            }
;;;116        }
00012a  bf00              NOP      
                  |L1.300|
00012c  e7ea              B        |L1.260|
                  |L1.302|
00012e  bf00              NOP                            ;114
;;;117    }
000130  bd10              POP      {r4,pc}
;;;118    
                          ENDP

                  event_handler_init PROC
;;;119    void event_handler_init(void)
000132  b510              PUSH     {r4,lr}
;;;120    {
;;;121        if (g_is_initialized)
000134  484b              LDR      r0,|L1.612|
000136  7800              LDRB     r0,[r0,#0]  ; g_is_initialized
000138  2800              CMP      r0,#0
00013a  d000              BEQ      |L1.318|
                  |L1.316|
;;;122        {
;;;123            /* may be called twice when in serial mode, can safely skip the second time */
;;;124            return;
;;;125        }
;;;126        /* init event queues */
;;;127        g_async_evt_fifo.array_len = ASYNC_EVENT_FIFO_QUEUE_SIZE;
;;;128        g_async_evt_fifo.elem_array = g_async_evt_fifo_buffer;
;;;129        g_async_evt_fifo.elem_size = sizeof(async_event_t);
;;;130        g_async_evt_fifo.memcpy_fptr = NULL;
;;;131        fifo_init(&g_async_evt_fifo);
;;;132        
;;;133        g_async_evt_fifo_ts.array_len = ASYNC_EVENT_FIFO_QUEUE_SIZE;
;;;134        g_async_evt_fifo_ts.elem_array = g_async_evt_fifo_buffer_ts;
;;;135        g_async_evt_fifo_ts.elem_size = sizeof(async_event_t);
;;;136        g_async_evt_fifo_ts.memcpy_fptr = NULL;
;;;137        fifo_init(&g_async_evt_fifo_ts);
;;;138        
;;;139        NVIC_EnableIRQ(SWI0_IRQn);
;;;140        NVIC_SetPriority(SWI0_IRQn, 3);
;;;141        g_is_initialized = true;
;;;142    }
00013c  bd10              POP      {r4,pc}
                  |L1.318|
00013e  2008              MOVS     r0,#8                 ;127
000140  4946              LDR      r1,|L1.604|
000142  6088              STR      r0,[r1,#8]            ;127  ; g_async_evt_fifo
000144  4848              LDR      r0,|L1.616|
000146  6008              STR      r0,[r1,#0]            ;128  ; g_async_evt_fifo
000148  2030              MOVS     r0,#0x30              ;129
00014a  6048              STR      r0,[r1,#4]            ;129  ; g_async_evt_fifo
00014c  2000              MOVS     r0,#0                 ;130
00014e  6148              STR      r0,[r1,#0x14]         ;130  ; g_async_evt_fifo
000150  4608              MOV      r0,r1                 ;131
000152  f7fffffe          BL       fifo_init
000156  2008              MOVS     r0,#8                 ;133
000158  4941              LDR      r1,|L1.608|
00015a  6088              STR      r0,[r1,#8]            ;133  ; g_async_evt_fifo_ts
00015c  4843              LDR      r0,|L1.620|
00015e  6008              STR      r0,[r1,#0]            ;134  ; g_async_evt_fifo_ts
000160  2030              MOVS     r0,#0x30              ;135
000162  6048              STR      r0,[r1,#4]            ;135  ; g_async_evt_fifo_ts
000164  2000              MOVS     r0,#0                 ;136
000166  6148              STR      r0,[r1,#0x14]         ;136  ; g_async_evt_fifo_ts
000168  4608              MOV      r0,r1                 ;137
00016a  f7fffffe          BL       fifo_init
00016e  2014              MOVS     r0,#0x14              ;139
000170  2101              MOVS     r1,#1                 ;139
000172  4081              LSLS     r1,r1,r0              ;139
000174  4a3e              LDR      r2,|L1.624|
000176  6011              STR      r1,[r2,#0]            ;139
000178  bf00              NOP                            ;139
00017a  2103              MOVS     r1,#3                 ;140
00017c  f7fffffe          BL       NVIC_SetPriority
000180  2001              MOVS     r0,#1                 ;141
000182  4938              LDR      r1,|L1.612|
000184  7008              STRB     r0,[r1,#0]            ;141
000186  bf00              NOP      
000188  e7d8              B        |L1.316|
;;;143    
                          ENDP

                  event_handler_push PROC
;;;144    
;;;145    void event_handler_push(async_event_t* evt)
00018a  b570              PUSH     {r4-r6,lr}
;;;146    {
00018c  4604              MOV      r4,r0
;;;147        /**@NOTE: This might drop events... */
;;;148        fifo_t* p_fifo = NULL;
00018e  2500              MOVS     r5,#0
;;;149        switch (evt->type)   
000190  7820              LDRB     r0,[r4,#0]
000192  2803              CMP      r0,#3
000194  d101              BNE      |L1.410|
;;;150        {
;;;151        case EVENT_TYPE_GENERIC:
;;;152            p_fifo = &g_async_evt_fifo;
000196  4d31              LDR      r5,|L1.604|
;;;153            break;
000198  e001              B        |L1.414|
                  |L1.410|
;;;154        default:
;;;155            p_fifo = &g_async_evt_fifo_ts;
00019a  4d31              LDR      r5,|L1.608|
;;;156            break;
00019c  bf00              NOP      
                  |L1.414|
00019e  bf00              NOP                            ;153
;;;157        }
;;;158        fifo_push(p_fifo, evt);
0001a0  4621              MOV      r1,r4
0001a2  4628              MOV      r0,r5
0001a4  f7fffffe          BL       fifo_push
;;;159    
;;;160        if (NVIC_GetPendingIRQ(SWI0_IRQn) == 0)
0001a8  2014              MOVS     r0,#0x14
0001aa  4932              LDR      r1,|L1.628|
0001ac  6809              LDR      r1,[r1,#0]
0001ae  2201              MOVS     r2,#1
0001b0  4082              LSLS     r2,r2,r0
0001b2  4011              ANDS     r1,r1,r2
0001b4  2900              CMP      r1,#0
0001b6  d001              BEQ      |L1.444|
0001b8  2101              MOVS     r1,#1
0001ba  e000              B        |L1.446|
                  |L1.444|
0001bc  2100              MOVS     r1,#0
                  |L1.446|
0001be  2900              CMP      r1,#0
0001c0  d102              BNE      |L1.456|
;;;161        {
;;;162            NVIC_SetPendingIRQ(SWI0_IRQn);
0001c2  2014              MOVS     r0,#0x14
0001c4  f7fffffe          BL       NVIC_SetPendingIRQ
                  |L1.456|
;;;163        }
;;;164    }
0001c8  bd70              POP      {r4-r6,pc}
;;;165    
                          ENDP

                  event_handler_resume PROC
;;;166    void event_handler_resume(void)
0001ca  b510              PUSH     {r4,lr}
;;;167    {
;;;168        if (!fifo_is_empty(&g_async_evt_fifo))
0001cc  4823              LDR      r0,|L1.604|
0001ce  f7fffffe          BL       fifo_is_empty
0001d2  2800              CMP      r0,#0
0001d4  d102              BNE      |L1.476|
;;;169        {
;;;170            NVIC_SetPendingIRQ(SWI0_IRQn);
0001d6  2014              MOVS     r0,#0x14
0001d8  f7fffffe          BL       NVIC_SetPendingIRQ
                  |L1.476|
;;;171        }
;;;172    }
0001dc  bd10              POP      {r4,pc}
;;;173    
                          ENDP

                  NVIC_SetPendingIRQ PROC
;;;554     */
;;;555    __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
0001de  06c2              LSLS     r2,r0,#27
;;;556    {
;;;557      NVIC->ISPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
0001e0  0ed2              LSRS     r2,r2,#27
0001e2  2101              MOVS     r1,#1
0001e4  4091              LSLS     r1,r1,r2
0001e6  4a23              LDR      r2,|L1.628|
0001e8  6011              STR      r1,[r2,#0]
;;;558    }
0001ea  4770              BX       lr
;;;559    
                          ENDP

                  NVIC_SetPriority PROC
;;;581     */
;;;582    __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
0001ec  b510              PUSH     {r4,lr}
;;;583    {
;;;584      if(IRQn < 0) {
0001ee  2800              CMP      r0,#0
0001f0  da19              BGE      |L1.550|
;;;585        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
0001f2  4a21              LDR      r2,|L1.632|
0001f4  0703              LSLS     r3,r0,#28
0001f6  0f1b              LSRS     r3,r3,#28
0001f8  3b08              SUBS     r3,r3,#8
0001fa  089b              LSRS     r3,r3,#2
0001fc  009b              LSLS     r3,r3,#2
0001fe  58d2              LDR      r2,[r2,r3]
000200  0783              LSLS     r3,r0,#30
000202  0edc              LSRS     r4,r3,#27
000204  23ff              MOVS     r3,#0xff
000206  40a3              LSLS     r3,r3,r4
000208  439a              BICS     r2,r2,r3
00020a  078b              LSLS     r3,r1,#30
00020c  0e1b              LSRS     r3,r3,#24
00020e  0784              LSLS     r4,r0,#30
000210  0ee4              LSRS     r4,r4,#27
000212  40a3              LSLS     r3,r3,r4
000214  431a              ORRS     r2,r2,r3
000216  4b18              LDR      r3,|L1.632|
000218  0704              LSLS     r4,r0,#28
00021a  0f24              LSRS     r4,r4,#28
00021c  3c08              SUBS     r4,r4,#8
00021e  08a4              LSRS     r4,r4,#2
000220  00a4              LSLS     r4,r4,#2
000222  511a              STR      r2,[r3,r4]
000224  e018              B        |L1.600|
                  |L1.550|
;;;586            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;587      else {
;;;588        NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
000226  4a12              LDR      r2,|L1.624|
000228  2303              MOVS     r3,#3
00022a  021b              LSLS     r3,r3,#8
00022c  18d2              ADDS     r2,r2,r3
00022e  0883              LSRS     r3,r0,#2
000230  009b              LSLS     r3,r3,#2
000232  58d2              LDR      r2,[r2,r3]
000234  0783              LSLS     r3,r0,#30
000236  0edc              LSRS     r4,r3,#27
000238  23ff              MOVS     r3,#0xff
00023a  40a3              LSLS     r3,r3,r4
00023c  439a              BICS     r2,r2,r3
00023e  078b              LSLS     r3,r1,#30
000240  0e1b              LSRS     r3,r3,#24
000242  0784              LSLS     r4,r0,#30
000244  0ee4              LSRS     r4,r4,#27
000246  40a3              LSLS     r3,r3,r4
000248  431a              ORRS     r2,r2,r3
00024a  4b09              LDR      r3,|L1.624|
00024c  2403              MOVS     r4,#3
00024e  0224              LSLS     r4,r4,#8
000250  191b              ADDS     r3,r3,r4
000252  0884              LSRS     r4,r0,#2
000254  00a4              LSLS     r4,r4,#2
000256  511a              STR      r2,[r3,r4]
                  |L1.600|
;;;589            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;590    }
000258  bd10              POP      {r4,pc}
;;;591    
                          ENDP

00025a  0000              DCW      0x0000
                  |L1.604|
                          DCD      g_async_evt_fifo
                  |L1.608|
                          DCD      g_async_evt_fifo_ts
                  |L1.612|
                          DCD      g_is_initialized
                  |L1.616|
                          DCD      g_async_evt_fifo_buffer
                  |L1.620|
                          DCD      g_async_evt_fifo_buffer_ts
                  |L1.624|
                          DCD      0xe000e100
                  |L1.628|
                          DCD      0xe000e200
                  |L1.632|
                          DCD      0xe000ed1c

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_async_evt_fifo
                          %        24
                  g_async_evt_fifo_buffer
                          %        384
                  g_async_evt_fifo_ts
                          %        24
                  g_async_evt_fifo_buffer_ts
                          %        384

                          AREA ||.data||, DATA, ALIGN=0

                  g_is_initialized
000000  00                DCB      0x00

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L16.24|
                  |L16.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L16.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L16.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\rbc_mesh\\src\\event_handler.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_event_handler_c_a9472db9____REV16|
#line 129 "..\\..\\..\\..\\..\\..\\components\\toolchain\\gcc\\core_cmInstr.h"
|__asm___15_event_handler_c_a9472db9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_event_handler_c_a9472db9____REVSH|
#line 144
|__asm___15_event_handler_c_a9472db9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
