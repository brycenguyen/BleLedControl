; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\_build\nrf_drv_gpiote.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\nrf_drv_gpiote.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\include -I..\..\..\rbc_mesh -I..\..\..\rbc_mesh\include -I..\..\..\SDK\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\config -I..\..\..\..\..\..\components\drivers_nrf\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\7.2.1\Device\Include -D__MICROLIB -DNRF51 -DBOARD_RHC -DNRF51 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\nrf_drv_gpiote.crf ..\..\..\..\..\..\components\drivers_nrf\gpiote\nrf_drv_gpiote.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  nrf_gpio_cfg_sense_set PROC
;;;429    
;;;430    __STATIC_INLINE void nrf_gpio_cfg_sense_set(uint32_t pin_number, nrf_gpio_pin_sense_t sense_config)
000000  b510              PUSH     {r4,lr}
;;;431    {
;;;432        /*lint -e{845} // A zero has been given as right argument to operator '|'" */
;;;433        //uint32_t cnf = NRF_GPIO->PIN_CNF[pin_number] & ~GPIO_PIN_CNF_SENSE_Msk;
;;;434        NRF_GPIO->PIN_CNF[pin_number] &= ~GPIO_PIN_CNF_SENSE_Msk;
000002  2205              MOVS     r2,#5
000004  0712              LSLS     r2,r2,#28
000006  2307              MOVS     r3,#7
000008  021b              LSLS     r3,r3,#8
00000a  18d2              ADDS     r2,r2,r3
00000c  0083              LSLS     r3,r0,#2
00000e  58d2              LDR      r2,[r2,r3]
000010  2303              MOVS     r3,#3
000012  041b              LSLS     r3,r3,#16
000014  439a              BICS     r2,r2,r3
000016  2305              MOVS     r3,#5
000018  071b              LSLS     r3,r3,#28
00001a  2407              MOVS     r4,#7
00001c  0224              LSLS     r4,r4,#8
00001e  191b              ADDS     r3,r3,r4
000020  0084              LSLS     r4,r0,#2
000022  511a              STR      r2,[r3,r4]
;;;435        NRF_GPIO->PIN_CNF[pin_number] |= (sense_config << GPIO_PIN_CNF_SENSE_Pos);
000024  2205              MOVS     r2,#5
000026  0712              LSLS     r2,r2,#28
000028  2307              MOVS     r3,#7
00002a  021b              LSLS     r3,r3,#8
00002c  18d2              ADDS     r2,r2,r3
00002e  0083              LSLS     r3,r0,#2
000030  58d2              LDR      r2,[r2,r3]
000032  040b              LSLS     r3,r1,#16
000034  431a              ORRS     r2,r2,r3
000036  2305              MOVS     r3,#5
000038  071b              LSLS     r3,r3,#28
00003a  2407              MOVS     r4,#7
00003c  0224              LSLS     r4,r4,#8
00003e  191b              ADDS     r3,r3,r4
000040  0084              LSLS     r4,r0,#2
000042  511a              STR      r2,[r3,r4]
;;;436    }
000044  bd10              POP      {r4,pc}
;;;437    
                          ENDP

                  pin_in_use_by_te PROC
;;;46     
;;;47     __STATIC_INLINE bool pin_in_use_by_te(uint32_t pin)
000046  4601              MOV      r1,r0
;;;48     {
;;;49         return (m_cb.pin_assignments[pin] >= 0 && m_cb.pin_assignments[pin] < NUMBER_OF_GPIO_TE) ? true : false;
000048  48fe              LDR      r0,|L1.1092|
00004a  5640              LDRSB    r0,[r0,r1]
00004c  2800              CMP      r0,#0
00004e  db05              BLT      |L1.92|
000050  48fc              LDR      r0,|L1.1092|
000052  5640              LDRSB    r0,[r0,r1]
000054  2804              CMP      r0,#4
000056  da01              BGE      |L1.92|
000058  2001              MOVS     r0,#1
                  |L1.90|
;;;50     }
00005a  4770              BX       lr
                  |L1.92|
00005c  2000              MOVS     r0,#0                 ;49
00005e  e7fc              B        |L1.90|
;;;51     
                          ENDP

                  channel_port_alloc PROC
;;;99     
;;;100    static int8_t channel_port_alloc(uint32_t pin,nrf_drv_gpiote_evt_handler_t handler, bool channel)
000060  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;101    {
000062  b085              SUB      sp,sp,#0x14
000064  460b              MOV      r3,r1
;;;102        int8_t channel_id = NO_CHANNELS;
000066  2000              MOVS     r0,#0
000068  43c0              MVNS     r0,r0
00006a  9004              STR      r0,[sp,#0x10]
;;;103        uint32_t i;
;;;104    
;;;105        uint32_t start_idx = channel ? 0 : NUMBER_OF_GPIO_TE;
00006c  2a00              CMP      r2,#0
00006e  d001              BEQ      |L1.116|
000070  2000              MOVS     r0,#0
000072  e000              B        |L1.118|
                  |L1.116|
000074  2004              MOVS     r0,#4
                  |L1.118|
000076  9003              STR      r0,[sp,#0xc]
;;;106        uint32_t end_idx = channel ? NUMBER_OF_GPIO_TE : (NUMBER_OF_GPIO_TE+GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS);
000078  2a00              CMP      r2,#0
00007a  d001              BEQ      |L1.128|
00007c  2004              MOVS     r0,#4
00007e  e000              B        |L1.130|
                  |L1.128|
000080  200a              MOVS     r0,#0xa
                  |L1.130|
000082  9002              STR      r0,[sp,#8]
;;;107        //critical section
;;;108    
;;;109        for (i = start_idx; i < end_idx; i++)
000084  9903              LDR      r1,[sp,#0xc]
000086  e01e              B        |L1.198|
                  |L1.136|
;;;110        {
;;;111            if (m_cb.handlers[i] == FORBIDDEN_HANDLER_ADDRESS)
000088  008c              LSLS     r4,r1,#2
00008a  48ee              LDR      r0,|L1.1092|
00008c  3828              SUBS     r0,r0,#0x28
00008e  5900              LDR      r0,[r0,r4]
000090  1c40              ADDS     r0,r0,#1
000092  2800              CMP      r0,#0
000094  d116              BNE      |L1.196|
;;;112            {
;;;113                pin_in_use_by_te_set(pin, i, handler, channel);
000096  4608              MOV      r0,r1
000098  9c05              LDR      r4,[sp,#0x14]
00009a  9300              STR      r3,[sp,#0]
00009c  9201              STR      r2,[sp,#4]
00009e  b246              SXTB     r6,r0
0000a0  4de8              LDR      r5,|L1.1092|
0000a2  552e              STRB     r6,[r5,r4]
0000a4  0086              LSLS     r6,r0,#2
0000a6  3d28              SUBS     r5,r5,#0x28
0000a8  9b00              LDR      r3,[sp,#0]
0000aa  51ab              STR      r3,[r5,r6]
0000ac  9a01              LDR      r2,[sp,#4]
0000ae  2a00              CMP      r2,#0
0000b0  d104              BNE      |L1.188|
0000b2  b266              SXTB     r6,r4
0000b4  1f05              SUBS     r5,r0,#4
0000b6  4fe3              LDR      r7,|L1.1092|
0000b8  3720              ADDS     r7,r7,#0x20
0000ba  557e              STRB     r6,[r7,r5]
                  |L1.188|
0000bc  bf00              NOP      
;;;114                channel_id = i;
0000be  b248              SXTB     r0,r1
0000c0  9004              STR      r0,[sp,#0x10]
;;;115                break;
0000c2  e003              B        |L1.204|
                  |L1.196|
0000c4  1c49              ADDS     r1,r1,#1              ;109
                  |L1.198|
0000c6  9802              LDR      r0,[sp,#8]            ;109
0000c8  4281              CMP      r1,r0                 ;109
0000ca  d3dd              BCC      |L1.136|
                  |L1.204|
0000cc  bf00              NOP      
;;;116            }
;;;117        }
;;;118        //critical section
;;;119        return channel_id;
0000ce  9804              LDR      r0,[sp,#0x10]
;;;120    }
0000d0  b008              ADD      sp,sp,#0x20
0000d2  bdf0              POP      {r4-r7,pc}
;;;121    
                          ENDP

                  channel_free PROC
;;;122    static void channel_free(uint8_t channel_id)
0000d4  2200              MOVS     r2,#0
;;;123    {
;;;124        m_cb.handlers[channel_id] = FORBIDDEN_HANDLER_ADDRESS;
0000d6  43d2              MVNS     r2,r2
0000d8  0083              LSLS     r3,r0,#2
0000da  49da              LDR      r1,|L1.1092|
0000dc  3928              SUBS     r1,r1,#0x28
0000de  50ca              STR      r2,[r1,r3]
;;;125        if (channel_id >= NUMBER_OF_GPIO_TE)
0000e0  2804              CMP      r0,#4
0000e2  db04              BLT      |L1.238|
;;;126        {
;;;127            m_cb.handlers_to_pins[channel_id-NUMBER_OF_GPIO_TE] = (int8_t)-1;
0000e4  4613              MOV      r3,r2
0000e6  1f01              SUBS     r1,r0,#4
0000e8  4ad6              LDR      r2,|L1.1092|
0000ea  3220              ADDS     r2,r2,#0x20
0000ec  5453              STRB     r3,[r2,r1]
                  |L1.238|
;;;128        }
;;;129    }
0000ee  4770              BX       lr
;;;130    
                          ENDP

                  nrf_drv_gpiote_init PROC
;;;131    ret_code_t nrf_drv_gpiote_init(void)
0000f0  b510              PUSH     {r4,lr}
;;;132    {
;;;133        if (m_cb.state != NRF_DRV_STATE_UNINITIALIZED)
0000f2  48d4              LDR      r0,|L1.1092|
0000f4  382c              SUBS     r0,r0,#0x2c
0000f6  7800              LDRB     r0,[r0,#0]  ; m_cb
0000f8  2800              CMP      r0,#0
0000fa  d001              BEQ      |L1.256|
;;;134        {
;;;135            return NRF_ERROR_INVALID_STATE;
0000fc  2008              MOVS     r0,#8
                  |L1.254|
;;;136        }
;;;137    
;;;138        uint8_t i;
;;;139        for (i = 0; i < NUMBER_OF_PINS; i++)
;;;140        {
;;;141            pin_in_use_clear(i);
;;;142        }
;;;143        for (i = 0; i < (NUMBER_OF_GPIO_TE+GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS); i++)
;;;144        {
;;;145            channel_free(i);
;;;146        }
;;;147    
;;;148        nrf_drv_common_irq_enable(GPIOTE_IRQn, GPIOTE_CONFIG_IRQ_PRIORITY);
;;;149        nrf_gpiote_int_enable(GPIOTE_INTENSET_PORT_Msk);
;;;150        m_cb.state = NRF_DRV_STATE_INITIALIZED;
;;;151    
;;;152        return NRF_SUCCESS;
;;;153    }
0000fe  bd10              POP      {r4,pc}
                  |L1.256|
000100  2400              MOVS     r4,#0                 ;139
000102  e004              B        |L1.270|
                  |L1.260|
000104  4620              MOV      r0,r4                 ;141
000106  f7fffffe          BL       pin_in_use_clear
00010a  1c60              ADDS     r0,r4,#1              ;139
00010c  b2c4              UXTB     r4,r0                 ;139
                  |L1.270|
00010e  2c20              CMP      r4,#0x20              ;139
000110  dbf8              BLT      |L1.260|
000112  2400              MOVS     r4,#0                 ;143
000114  e004              B        |L1.288|
                  |L1.278|
000116  4620              MOV      r0,r4                 ;145
000118  f7fffffe          BL       channel_free
00011c  1c60              ADDS     r0,r4,#1              ;143
00011e  b2c4              UXTB     r4,r0                 ;143
                  |L1.288|
000120  2c0a              CMP      r4,#0xa               ;143
000122  dbf8              BLT      |L1.278|
000124  2101              MOVS     r1,#1                 ;148
000126  2006              MOVS     r0,#6                 ;148
000128  f7fffffe          BL       nrf_drv_common_irq_enable
00012c  2001              MOVS     r0,#1                 ;149
00012e  07c0              LSLS     r0,r0,#31             ;149
000130  f7fffffe          BL       nrf_gpiote_int_enable
000134  2001              MOVS     r0,#1                 ;150
000136  49c3              LDR      r1,|L1.1092|
000138  392c              SUBS     r1,r1,#0x2c           ;150
00013a  7008              STRB     r0,[r1,#0]            ;150
00013c  2000              MOVS     r0,#0                 ;152
00013e  e7de              B        |L1.254|
;;;154    
                          ENDP

                  nrf_drv_gpiote_is_init PROC
;;;155    bool nrf_drv_gpiote_is_init(void)
000140  48c0              LDR      r0,|L1.1092|
;;;156    {
;;;157        return (m_cb.state != NRF_DRV_STATE_UNINITIALIZED) ? true : false;
000142  382c              SUBS     r0,r0,#0x2c
000144  7800              LDRB     r0,[r0,#0]  ; m_cb
000146  2800              CMP      r0,#0
000148  d001              BEQ      |L1.334|
00014a  2001              MOVS     r0,#1
                  |L1.332|
;;;158    }
00014c  4770              BX       lr
                  |L1.334|
00014e  2000              MOVS     r0,#0                 ;157
000150  e7fc              B        |L1.332|
;;;159    
                          ENDP

                  nrf_drv_gpiote_in_event_disable PROC
;;;397    
;;;398    void nrf_drv_gpiote_in_event_disable(nrf_drv_gpiote_pin_t pin)
000152  b570              PUSH     {r4-r6,lr}
;;;399    {
000154  4604              MOV      r4,r0
;;;400        ASSERT(pin < NUMBER_OF_PINS);
;;;401        ASSERT(pin_in_use_by_gpiote(pin));
;;;402        if (pin_in_use_by_port(pin))
000156  4620              MOV      r0,r4
000158  f7fffffe          BL       pin_in_use_by_port
00015c  2800              CMP      r0,#0
00015e  d012              BEQ      |L1.390|
;;;403        {
;;;404            nrf_gpio_input_disconnect(pin);
000160  bf00              NOP      
000162  00a1              LSLS     r1,r4,#2
000164  4ab8              LDR      r2,|L1.1096|
000166  1889              ADDS     r1,r1,r2
000168  6809              LDR      r1,[r1,#0]
00016a  2202              MOVS     r2,#2
00016c  4391              BICS     r1,r1,r2
00016e  4608              MOV      r0,r1
000170  2102              MOVS     r1,#2
000172  4301              ORRS     r1,r1,r0
000174  2205              MOVS     r2,#5
000176  0712              LSLS     r2,r2,#28
000178  2307              MOVS     r3,#7
00017a  021b              LSLS     r3,r3,#8
00017c  18d2              ADDS     r2,r2,r3
00017e  00a3              LSLS     r3,r4,#2
000180  50d1              STR      r1,[r2,r3]
000182  bf00              NOP      
000184  e01e              B        |L1.452|
                  |L1.390|
;;;405        }
;;;406        else if(pin_in_use_by_te(pin))
000186  4620              MOV      r0,r4
000188  f7fffffe          BL       pin_in_use_by_te
00018c  2800              CMP      r0,#0
00018e  d019              BEQ      |L1.452|
;;;407        {
;;;408            int32_t channel = (int32_t)channel_port_get(pin);
000190  4620              MOV      r0,r4
000192  f7fffffe          BL       channel_port_get
000196  4605              MOV      r5,r0
;;;409            nrf_gpiote_event_disable(channel);
000198  4628              MOV      r0,r5
00019a  49ac              LDR      r1,|L1.1100|
00019c  2251              MOVS     r2,#0x51
00019e  0112              LSLS     r2,r2,#4
0001a0  1889              ADDS     r1,r1,r2
0001a2  0082              LSLS     r2,r0,#2
0001a4  5889              LDR      r1,[r1,r2]
0001a6  0849              LSRS     r1,r1,#1
0001a8  0049              LSLS     r1,r1,#1
0001aa  4aa8              LDR      r2,|L1.1100|
0001ac  2351              MOVS     r3,#0x51
0001ae  011b              LSLS     r3,r3,#4
0001b0  18d2              ADDS     r2,r2,r3
0001b2  0083              LSLS     r3,r0,#2
0001b4  50d1              STR      r1,[r2,r3]
0001b6  bf00              NOP      
;;;410            nrf_gpiote_int_disable(1 << channel);
0001b8  2001              MOVS     r0,#1
0001ba  40a8              LSLS     r0,r0,r5
0001bc  49a4              LDR      r1,|L1.1104|
0001be  6088              STR      r0,[r1,#8]
0001c0  bf00              NOP      
;;;411        }
0001c2  bf00              NOP      
                  |L1.452|
;;;412    }
0001c4  bd70              POP      {r4-r6,pc}
;;;413    
                          ENDP

                  nrf_drv_gpiote_in_uninit PROC
;;;414    void nrf_drv_gpiote_in_uninit(nrf_drv_gpiote_pin_t pin)
0001c6  b570              PUSH     {r4-r6,lr}
;;;415    {
0001c8  4605              MOV      r5,r0
;;;416        ASSERT(pin < NUMBER_OF_PINS);
;;;417        ASSERT(pin_in_use_by_gpiote(pin));
;;;418        nrf_drv_gpiote_in_event_disable(pin);
0001ca  4628              MOV      r0,r5
0001cc  f7fffffe          BL       nrf_drv_gpiote_in_event_disable
;;;419        if(pin_in_use_by_te(pin))
0001d0  4628              MOV      r0,r5
0001d2  f7fffffe          BL       pin_in_use_by_te
0001d6  2800              CMP      r0,#0
0001d8  d00c              BEQ      |L1.500|
;;;420        {
;;;421            nrf_gpiote_te_default(channel_port_get(pin));
0001da  4628              MOV      r0,r5
0001dc  f7fffffe          BL       channel_port_get
0001e0  4604              MOV      r4,r0
0001e2  2000              MOVS     r0,#0
0001e4  4999              LDR      r1,|L1.1100|
0001e6  2251              MOVS     r2,#0x51
0001e8  0112              LSLS     r2,r2,#4
0001ea  1889              ADDS     r1,r1,r2
0001ec  00a2              LSLS     r2,r4,#2
0001ee  5088              STR      r0,[r1,r2]
0001f0  bf00              NOP      
0001f2  bf00              NOP      
                  |L1.500|
;;;422        }
;;;423        nrf_gpio_cfg_default(pin);
0001f4  4628              MOV      r0,r5
0001f6  f7fffffe          BL       nrf_gpio_cfg_default
;;;424        channel_free((uint8_t)channel_port_get(pin));
0001fa  4628              MOV      r0,r5
0001fc  f7fffffe          BL       channel_port_get
000200  b2c4              UXTB     r4,r0
000202  4620              MOV      r0,r4
000204  f7fffffe          BL       channel_free
;;;425        pin_in_use_clear(pin);
000208  4628              MOV      r0,r5
00020a  f7fffffe          BL       pin_in_use_clear
;;;426    }
00020e  bd70              POP      {r4-r6,pc}
;;;427    
                          ENDP

                  nrf_drv_gpiote_out_uninit PROC
;;;231    
;;;232    void nrf_drv_gpiote_out_uninit(nrf_drv_gpiote_pin_t pin)
000210  b510              PUSH     {r4,lr}
;;;233    {
000212  4604              MOV      r4,r0
;;;234        ASSERT(pin < NUMBER_OF_PINS);
;;;235        ASSERT(pin_in_use(pin));
;;;236    
;;;237        if (pin_in_use_by_te(pin))
000214  4620              MOV      r0,r4
000216  f7fffffe          BL       pin_in_use_by_te
00021a  2800              CMP      r0,#0
00021c  d003              BEQ      |L1.550|
;;;238        {
;;;239            channel_free((uint8_t)m_cb.pin_assignments[pin]);
00021e  4989              LDR      r1,|L1.1092|
000220  5d08              LDRB     r0,[r1,r4]
000222  f7fffffe          BL       channel_free
                  |L1.550|
;;;240        }
;;;241        pin_in_use_clear(pin);
000226  4620              MOV      r0,r4
000228  f7fffffe          BL       pin_in_use_clear
;;;242    
;;;243        nrf_gpio_cfg_default(pin);
00022c  4620              MOV      r0,r4
00022e  f7fffffe          BL       nrf_gpio_cfg_default
;;;244    }
000232  bd10              POP      {r4,pc}
;;;245    
                          ENDP

                  nrf_drv_gpiote_uninit PROC
;;;159    
;;;160    void nrf_drv_gpiote_uninit(void)
000234  b510              PUSH     {r4,lr}
;;;161    {
;;;162        ASSERT(m_cb.state!=NRF_DRV_STATE_UNINITIALIZED);
;;;163    
;;;164        uint32_t i;
;;;165        for (i = 0; i < NUMBER_OF_PINS; i++)
000236  2400              MOVS     r4,#0
000238  e017              B        |L1.618|
                  |L1.570|
;;;166        {
;;;167            if (pin_in_use_as_non_task_out(i))
00023a  4620              MOV      r0,r4
00023c  4981              LDR      r1,|L1.1092|
00023e  5609              LDRSB    r1,[r1,r0]
000240  1c89              ADDS     r1,r1,#2
000242  2900              CMP      r1,#0
000244  d101              BNE      |L1.586|
000246  2101              MOVS     r1,#1
000248  e000              B        |L1.588|
                  |L1.586|
00024a  2100              MOVS     r1,#0
                  |L1.588|
00024c  2900              CMP      r1,#0
00024e  d003              BEQ      |L1.600|
;;;168            {
;;;169                nrf_drv_gpiote_out_uninit(i);
000250  4620              MOV      r0,r4
000252  f7fffffe          BL       nrf_drv_gpiote_out_uninit
000256  e007              B        |L1.616|
                  |L1.600|
;;;170            }
;;;171            else if( pin_in_use_by_gpiote(i))
000258  4620              MOV      r0,r4
00025a  f7fffffe          BL       pin_in_use_by_gpiote
00025e  2800              CMP      r0,#0
000260  d002              BEQ      |L1.616|
;;;172            {
;;;173                /* Disable gpiote_in is having the same effect on out pin as gpiote_out_uninit on
;;;174                 * so it can be called on all pins used by GPIOTE.
;;;175                 */
;;;176                nrf_drv_gpiote_in_uninit(i);
000262  4620              MOV      r0,r4
000264  f7fffffe          BL       nrf_drv_gpiote_in_uninit
                  |L1.616|
000268  1c64              ADDS     r4,r4,#1              ;165
                  |L1.618|
00026a  2c20              CMP      r4,#0x20              ;165
00026c  d3e5              BCC      |L1.570|
;;;177            }
;;;178        }
;;;179        m_cb.state = NRF_DRV_STATE_UNINITIALIZED;
00026e  2000              MOVS     r0,#0
000270  4974              LDR      r1,|L1.1092|
000272  392c              SUBS     r1,r1,#0x2c
000274  7008              STRB     r0,[r1,#0]
;;;180    }
000276  bd10              POP      {r4,pc}
;;;181    
                          ENDP

                  nrf_drv_gpiote_out_init PROC
;;;182    ret_code_t nrf_drv_gpiote_out_init(nrf_drv_gpiote_pin_t pin, nrf_drv_gpiote_out_config_t * p_config)
000278  b5fe              PUSH     {r1-r7,lr}
;;;183    {
00027a  4604              MOV      r4,r0
00027c  460e              MOV      r6,r1
;;;184        ASSERT(pin < NUMBER_OF_PINS);
;;;185        ASSERT(m_cb.state == NRF_DRV_STATE_INITIALIZED);
;;;186        ASSERT(p_config);
;;;187    
;;;188        ret_code_t result = NRF_SUCCESS;
00027e  2000              MOVS     r0,#0
000280  9001              STR      r0,[sp,#4]
;;;189    
;;;190        if (pin_in_use(pin))
000282  4620              MOV      r0,r4
000284  496f              LDR      r1,|L1.1092|
000286  5609              LDRSB    r1,[r1,r0]
000288  1c49              ADDS     r1,r1,#1
00028a  2900              CMP      r1,#0
00028c  d001              BEQ      |L1.658|
00028e  2101              MOVS     r1,#1
000290  e000              B        |L1.660|
                  |L1.658|
000292  2100              MOVS     r1,#0
                  |L1.660|
000294  2900              CMP      r1,#0
000296  d002              BEQ      |L1.670|
;;;191        {
;;;192            result = NRF_ERROR_INVALID_STATE;
000298  2008              MOVS     r0,#8
00029a  9001              STR      r0,[sp,#4]
00029c  e05b              B        |L1.854|
                  |L1.670|
;;;193        }
;;;194        else
;;;195        {
;;;196            if (p_config->task_pin)
00029e  78b0              LDRB     r0,[r6,#2]
0002a0  2800              CMP      r0,#0
0002a2  d03a              BEQ      |L1.794|
;;;197            {
;;;198                int8_t channel = channel_port_alloc(pin, NULL, true);
0002a4  2201              MOVS     r2,#1
0002a6  2100              MOVS     r1,#0
0002a8  4620              MOV      r0,r4
0002aa  f7fffffe          BL       channel_port_alloc
0002ae  4605              MOV      r5,r0
;;;199    
;;;200                if (channel != NO_CHANNELS)
0002b0  1c68              ADDS     r0,r5,#1
0002b2  2800              CMP      r0,#0
0002b4  d02e              BEQ      |L1.788|
;;;201                {
;;;202                    nrf_gpiote_task_configure(channel, pin, p_config->action, p_config->init_state);
0002b6  7837              LDRB     r7,[r6,#0]
0002b8  7872              LDRB     r2,[r6,#1]
0002ba  9200              STR      r2,[sp,#0]
0002bc  4863              LDR      r0,|L1.1100|
0002be  2151              MOVS     r1,#0x51
0002c0  0109              LSLS     r1,r1,#4
0002c2  1840              ADDS     r0,r0,r1
0002c4  00a9              LSLS     r1,r5,#2
0002c6  5840              LDR      r0,[r0,r1]
0002c8  4962              LDR      r1,|L1.1108|
0002ca  4008              ANDS     r0,r0,r1
0002cc  495f              LDR      r1,|L1.1100|
0002ce  2251              MOVS     r2,#0x51
0002d0  0112              LSLS     r2,r2,#4
0002d2  1889              ADDS     r1,r1,r2
0002d4  00aa              LSLS     r2,r5,#2
0002d6  5088              STR      r0,[r1,r2]
0002d8  485c              LDR      r0,|L1.1100|
0002da  2151              MOVS     r1,#0x51
0002dc  0109              LSLS     r1,r1,#4
0002de  1840              ADDS     r0,r0,r1
0002e0  00a9              LSLS     r1,r5,#2
0002e2  5841              LDR      r1,[r0,r1]
0002e4  0220              LSLS     r0,r4,#8
0002e6  221f              MOVS     r2,#0x1f
0002e8  0212              LSLS     r2,r2,#8
0002ea  4010              ANDS     r0,r0,r2
0002ec  043a              LSLS     r2,r7,#16
0002ee  2303              MOVS     r3,#3
0002f0  041b              LSLS     r3,r3,#16
0002f2  401a              ANDS     r2,r2,r3
0002f4  4310              ORRS     r0,r0,r2
0002f6  9a00              LDR      r2,[sp,#0]
0002f8  0512              LSLS     r2,r2,#20
0002fa  2301              MOVS     r3,#1
0002fc  051b              LSLS     r3,r3,#20
0002fe  401a              ANDS     r2,r2,r3
000300  4310              ORRS     r0,r0,r2
000302  4301              ORRS     r1,r1,r0
000304  4851              LDR      r0,|L1.1100|
000306  2251              MOVS     r2,#0x51
000308  0112              LSLS     r2,r2,#4
00030a  1880              ADDS     r0,r0,r2
00030c  00aa              LSLS     r2,r5,#2
00030e  5081              STR      r1,[r0,r2]
000310  bf00              NOP      
000312  e001              B        |L1.792|
                  |L1.788|
;;;203                }
;;;204                else
;;;205                {
;;;206                    result = NRF_ERROR_NO_MEM;
000314  2004              MOVS     r0,#4
000316  9001              STR      r0,[sp,#4]
                  |L1.792|
;;;207                }
;;;208            }
000318  e006              B        |L1.808|
                  |L1.794|
;;;209            else
;;;210            {
;;;211                pin_in_use_set(pin);
00031a  bf00              NOP      
00031c  2101              MOVS     r1,#1
00031e  43c9              MVNS     r1,r1
000320  4848              LDR      r0,|L1.1092|
000322  5501              STRB     r1,[r0,r4]
000324  bf00              NOP      
000326  bf00              NOP      
                  |L1.808|
;;;212            }
;;;213    
;;;214            if (result == NRF_SUCCESS)
000328  9801              LDR      r0,[sp,#4]
00032a  2800              CMP      r0,#0
00032c  d113              BNE      |L1.854|
;;;215            {
;;;216                nrf_gpio_cfg_output(pin);
00032e  bf00              NOP      
000330  2003              MOVS     r0,#3
000332  2105              MOVS     r1,#5
000334  0709              LSLS     r1,r1,#28
000336  2207              MOVS     r2,#7
000338  0212              LSLS     r2,r2,#8
00033a  1889              ADDS     r1,r1,r2
00033c  00a2              LSLS     r2,r4,#2
00033e  5088              STR      r0,[r1,r2]
000340  bf00              NOP      
;;;217    
;;;218                if (p_config->init_state == NRF_GPIOTE_INITIAL_VALUE_HIGH)
000342  7870              LDRB     r0,[r6,#1]
000344  2801              CMP      r0,#1
000346  d103              BNE      |L1.848|
;;;219                {
;;;220                    nrf_gpio_pin_set(pin);
000348  4620              MOV      r0,r4
00034a  f7fffffe          BL       nrf_gpio_pin_set
00034e  e002              B        |L1.854|
                  |L1.848|
;;;221                }
;;;222                else
;;;223                {
;;;224                    nrf_gpio_pin_clear(pin);
000350  4620              MOV      r0,r4
000352  f7fffffe          BL       nrf_gpio_pin_clear
                  |L1.854|
;;;225                }
;;;226            }
;;;227        }
;;;228    
;;;229        return result;
000356  9801              LDR      r0,[sp,#4]
;;;230    }
000358  bdfe              POP      {r1-r7,pc}
;;;231    
                          ENDP

                  nrf_drv_gpiote_out_set PROC
;;;245    
;;;246    void nrf_drv_gpiote_out_set(nrf_drv_gpiote_pin_t pin)
00035a  b510              PUSH     {r4,lr}
;;;247    {
00035c  4604              MOV      r4,r0
;;;248        ASSERT(pin < NUMBER_OF_PINS);
;;;249        ASSERT(pin_in_use(pin));
;;;250        ASSERT(!pin_in_use_by_te(pin))
;;;251    
;;;252        nrf_gpio_pin_set(pin);
00035e  4620              MOV      r0,r4
000360  f7fffffe          BL       nrf_gpio_pin_set
;;;253    }
000364  bd10              POP      {r4,pc}
;;;254    
                          ENDP

                  nrf_drv_gpiote_out_clear PROC
;;;255    void nrf_drv_gpiote_out_clear(nrf_drv_gpiote_pin_t pin)
000366  b510              PUSH     {r4,lr}
;;;256    {
000368  4604              MOV      r4,r0
;;;257        ASSERT(pin < NUMBER_OF_PINS);
;;;258        ASSERT(pin_in_use(pin));
;;;259        ASSERT(!pin_in_use_by_te(pin))
;;;260    
;;;261        nrf_gpio_pin_clear(pin);
00036a  4620              MOV      r0,r4
00036c  f7fffffe          BL       nrf_gpio_pin_clear
;;;262    }
000370  bd10              POP      {r4,pc}
;;;263    
                          ENDP

                  nrf_drv_gpiote_out_toggle PROC
;;;264    void nrf_drv_gpiote_out_toggle(nrf_drv_gpiote_pin_t pin)
000372  b510              PUSH     {r4,lr}
;;;265    {
;;;266        ASSERT(pin < NUMBER_OF_PINS);
;;;267        ASSERT(pin_in_use(pin));
;;;268        ASSERT(!pin_in_use_by_te(pin))
;;;269    
;;;270        nrf_gpio_pin_toggle(pin);
000374  4601              MOV      r1,r0
000376  2401              MOVS     r4,#1
000378  408c              LSLS     r4,r4,r1
00037a  4622              MOV      r2,r4
00037c  4c36              LDR      r4,|L1.1112|
00037e  6864              LDR      r4,[r4,#4]
000380  40cc              LSRS     r4,r4,r1
000382  07e3              LSLS     r3,r4,#31
000384  0fdb              LSRS     r3,r3,#31
000386  2b00              CMP      r3,#0
000388  d102              BNE      |L1.912|
00038a  4c33              LDR      r4,|L1.1112|
00038c  60a2              STR      r2,[r4,#8]
00038e  e001              B        |L1.916|
                  |L1.912|
000390  4c31              LDR      r4,|L1.1112|
000392  60e2              STR      r2,[r4,#0xc]
                  |L1.916|
000394  bf00              NOP      
;;;271    }
000396  bd10              POP      {r4,pc}
;;;272    
                          ENDP

                  nrf_drv_gpiote_out_task_enable PROC
;;;273    void nrf_drv_gpiote_out_task_enable(nrf_drv_gpiote_pin_t pin)
000398  b530              PUSH     {r4,r5,lr}
;;;274    {
00039a  4601              MOV      r1,r0
;;;275        ASSERT(pin < NUMBER_OF_PINS);
;;;276        ASSERT(pin_in_use(pin));
;;;277        ASSERT(pin_in_use_by_te(pin))
;;;278    
;;;279        nrf_gpiote_task_enable(m_cb.pin_assignments[pin]);
00039c  4a29              LDR      r2,|L1.1092|
00039e  5650              LDRSB    r0,[r2,r1]
0003a0  0083              LSLS     r3,r0,#2
0003a2  4c2e              LDR      r4,|L1.1116|
0003a4  191b              ADDS     r3,r3,r4
0003a6  691b              LDR      r3,[r3,#0x10]
0003a8  2403              MOVS     r4,#3
0003aa  4323              ORRS     r3,r3,r4
0003ac  461a              MOV      r2,r3
0003ae  231f              MOVS     r3,#0x1f
0003b0  021b              LSLS     r3,r3,#8
0003b2  4313              ORRS     r3,r3,r2
0003b4  4c25              LDR      r4,|L1.1100|
0003b6  2551              MOVS     r5,#0x51
0003b8  012d              LSLS     r5,r5,#4
0003ba  1964              ADDS     r4,r4,r5
0003bc  0085              LSLS     r5,r0,#2
0003be  5163              STR      r3,[r4,r5]
0003c0  bf00              NOP      
0003c2  bf00              NOP      
0003c4  bf00              NOP      
0003c6  4b21              LDR      r3,|L1.1100|
0003c8  2451              MOVS     r4,#0x51
0003ca  0124              LSLS     r4,r4,#4
0003cc  191b              ADDS     r3,r3,r4
0003ce  0084              LSLS     r4,r0,#2
0003d0  511a              STR      r2,[r3,r4]
0003d2  bf00              NOP      
;;;280    }
0003d4  bd30              POP      {r4,r5,pc}
;;;281    
                          ENDP

                  nrf_drv_gpiote_out_task_disable PROC
;;;282    void nrf_drv_gpiote_out_task_disable(nrf_drv_gpiote_pin_t pin)
0003d6  b510              PUSH     {r4,lr}
;;;283    {
0003d8  4601              MOV      r1,r0
;;;284        ASSERT(pin < NUMBER_OF_PINS);
;;;285        ASSERT(pin_in_use(pin));
;;;286        ASSERT(pin_in_use_by_te(pin))
;;;287    
;;;288        nrf_gpiote_task_disable(m_cb.pin_assignments[pin]);
0003da  4a1a              LDR      r2,|L1.1092|
0003dc  5650              LDRSB    r0,[r2,r1]
0003de  4a1b              LDR      r2,|L1.1100|
0003e0  2351              MOVS     r3,#0x51
0003e2  011b              LSLS     r3,r3,#4
0003e4  18d2              ADDS     r2,r2,r3
0003e6  0083              LSLS     r3,r0,#2
0003e8  58d2              LDR      r2,[r2,r3]
0003ea  0892              LSRS     r2,r2,#2
0003ec  0092              LSLS     r2,r2,#2
0003ee  4b17              LDR      r3,|L1.1100|
0003f0  2451              MOVS     r4,#0x51
0003f2  0124              LSLS     r4,r4,#4
0003f4  191b              ADDS     r3,r3,r4
0003f6  0084              LSLS     r4,r0,#2
0003f8  511a              STR      r2,[r3,r4]
0003fa  bf00              NOP      
;;;289    }
0003fc  bd10              POP      {r4,pc}
;;;290    
                          ENDP

                  nrf_drv_gpiote_out_task_addr_get PROC
;;;291    uint32_t nrf_drv_gpiote_out_task_addr_get(nrf_drv_gpiote_pin_t pin)
0003fe  b570              PUSH     {r4-r6,lr}
;;;292    {
000400  4605              MOV      r5,r0
;;;293        ASSERT(pin < NUMBER_OF_PINS);
;;;294        ASSERT(pin_in_use_by_te(pin));
;;;295    
;;;296        nrf_gpiote_tasks_t task = (nrf_gpiote_tasks_t)((uint32_t)NRF_GPIOTE_TASKS_OUT_0+(4*channel_port_get(pin)));
000402  4628              MOV      r0,r5
000404  f7fffffe          BL       channel_port_get
000408  0680              LSLS     r0,r0,#26
00040a  0e04              LSRS     r4,r0,#24
;;;297        return nrf_gpiote_task_addr_get(task);
00040c  4620              MOV      r0,r4
00040e  490f              LDR      r1,|L1.1100|
000410  1841              ADDS     r1,r0,r1
000412  4608              MOV      r0,r1
;;;298    }
000414  bd70              POP      {r4-r6,pc}
;;;299    
                          ENDP

                  nrf_drv_gpiote_out_task_force PROC
;;;300    void nrf_drv_gpiote_out_task_force(nrf_drv_gpiote_pin_t pin, uint8_t state)
000416  b570              PUSH     {r4-r6,lr}
;;;301    {
000418  4602              MOV      r2,r0
00041a  460b              MOV      r3,r1
;;;302        ASSERT(pin < NUMBER_OF_PINS);
;;;303        ASSERT(pin_in_use(pin));
;;;304        ASSERT(pin_in_use_by_te(pin));
;;;305        
;;;306        nrf_gpiote_outinit_t init_val = state ? NRF_GPIOTE_INITIAL_VALUE_HIGH : NRF_GPIOTE_INITIAL_VALUE_LOW;
00041c  2b00              CMP      r3,#0
00041e  d001              BEQ      |L1.1060|
000420  2001              MOVS     r0,#1
000422  e000              B        |L1.1062|
                  |L1.1060|
000424  2000              MOVS     r0,#0
                  |L1.1062|
000426  4601              MOV      r1,r0
;;;307        nrf_gpiote_task_force(m_cb.pin_assignments[pin], init_val);
000428  4c06              LDR      r4,|L1.1092|
00042a  56a0              LDRSB    r0,[r4,r2]
00042c  4c07              LDR      r4,|L1.1100|
00042e  2551              MOVS     r5,#0x51
000430  012d              LSLS     r5,r5,#4
000432  1964              ADDS     r4,r4,r5
000434  0085              LSLS     r5,r0,#2
000436  5964              LDR      r4,[r4,r5]
000438  2501              MOVS     r5,#1
00043a  052d              LSLS     r5,r5,#20
00043c  43ac              BICS     r4,r4,r5
00043e  4d03              LDR      r5,|L1.1100|
000440  2651              MOVS     r6,#0x51
000442  e00d              B        |L1.1120|
                  |L1.1092|
                          DCD      m_cb+0x2c
                  |L1.1096|
                          DCD      0x50000700
                  |L1.1100|
                          DCD      0x40006000
                  |L1.1104|
                          DCD      0x40006300
                  |L1.1108|
                          DCD      0xffece0ff
                  |L1.1112|
                          DCD      0x50000500
                  |L1.1116|
                          DCD      0x40006500
                  |L1.1120|
000460  0136              LSLS     r6,r6,#4
000462  19ad              ADDS     r5,r5,r6
000464  0086              LSLS     r6,r0,#2
000466  51ac              STR      r4,[r5,r6]
000468  4cf9              LDR      r4,|L1.2128|
00046a  2551              MOVS     r5,#0x51
00046c  012d              LSLS     r5,r5,#4
00046e  1964              ADDS     r4,r4,r5
000470  0085              LSLS     r5,r0,#2
000472  5964              LDR      r4,[r4,r5]
000474  050d              LSLS     r5,r1,#20
000476  2601              MOVS     r6,#1
000478  0536              LSLS     r6,r6,#20
00047a  4035              ANDS     r5,r5,r6
00047c  432c              ORRS     r4,r4,r5
00047e  4df4              LDR      r5,|L1.2128|
000480  2651              MOVS     r6,#0x51
000482  0136              LSLS     r6,r6,#4
000484  19ad              ADDS     r5,r5,r6
000486  0086              LSLS     r6,r0,#2
000488  51ac              STR      r4,[r5,r6]
00048a  bf00              NOP      
;;;308    }
00048c  bd70              POP      {r4-r6,pc}
;;;309    
                          ENDP

                  nrf_drv_gpiote_out_task_trigger PROC
;;;310    void nrf_drv_gpiote_out_task_trigger(nrf_drv_gpiote_pin_t pin)
00048e  b570              PUSH     {r4-r6,lr}
;;;311    {
000490  4604              MOV      r4,r0
;;;312        ASSERT(pin < NUMBER_OF_PINS);
;;;313        ASSERT(pin_in_use(pin));
;;;314        ASSERT(pin_in_use_by_te(pin));
;;;315        
;;;316        nrf_gpiote_tasks_t task = (nrf_gpiote_tasks_t)((uint32_t)NRF_GPIOTE_TASKS_OUT_0+(4*channel_port_get(pin)));
000492  4620              MOV      r0,r4
000494  f7fffffe          BL       channel_port_get
000498  0680              LSLS     r0,r0,#26
00049a  0e05              LSRS     r5,r0,#24
;;;317        nrf_gpiote_task_set(task);
00049c  bf00              NOP      
00049e  2001              MOVS     r0,#1
0004a0  49eb              LDR      r1,|L1.2128|
0004a2  1869              ADDS     r1,r5,r1
0004a4  6008              STR      r0,[r1,#0]
0004a6  bf00              NOP      
;;;318    }
0004a8  bd70              POP      {r4-r6,pc}
;;;319    
                          ENDP

                  nrf_drv_gpiote_in_init PROC
;;;320    ret_code_t nrf_drv_gpiote_in_init(nrf_drv_gpiote_pin_t pin,
0004aa  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;321                                      nrf_drv_gpiote_in_config_t * p_config,
;;;322                                      nrf_drv_gpiote_evt_handler_t evt_handler)
;;;323    {
0004ac  b082              SUB      sp,sp,#8
0004ae  4604              MOV      r4,r0
0004b0  460e              MOV      r6,r1
;;;324        ASSERT(pin < NUMBER_OF_PINS);
;;;325        ret_code_t result = NRF_SUCCESS;
0004b2  2000              MOVS     r0,#0
0004b4  9001              STR      r0,[sp,#4]
;;;326        /* Only one GPIOTE channel can be assigned to one physical pin. */
;;;327        if (pin_in_use_by_gpiote(pin))
0004b6  4620              MOV      r0,r4
0004b8  f7fffffe          BL       pin_in_use_by_gpiote
0004bc  2800              CMP      r0,#0
0004be  d002              BEQ      |L1.1222|
;;;328        {
;;;329            result = NRF_ERROR_INVALID_STATE;
0004c0  2008              MOVS     r0,#8
0004c2  9001              STR      r0,[sp,#4]
0004c4  e05f              B        |L1.1414|
                  |L1.1222|
;;;330        }
;;;331        else
;;;332        {
;;;333            int8_t channel = channel_port_alloc(pin, evt_handler, p_config->hi_accuracy);
0004c6  78f2              LDRB     r2,[r6,#3]
0004c8  4620              MOV      r0,r4
0004ca  9904              LDR      r1,[sp,#0x10]
0004cc  f7fffffe          BL       channel_port_alloc
0004d0  4605              MOV      r5,r0
;;;334            if (channel != NO_CHANNELS)
0004d2  1c68              ADDS     r0,r5,#1
0004d4  2800              CMP      r0,#0
0004d6  d053              BEQ      |L1.1408|
;;;335            {
;;;336                if (p_config->is_watcher)
0004d8  78b0              LDRB     r0,[r6,#2]
0004da  2800              CMP      r0,#0
0004dc  d010              BEQ      |L1.1280|
;;;337                {
;;;338                    nrf_gpio_cfg_watcher(pin);
0004de  bf00              NOP      
0004e0  00a1              LSLS     r1,r4,#2
0004e2  4adc              LDR      r2,|L1.2132|
0004e4  1889              ADDS     r1,r1,r2
0004e6  6809              LDR      r1,[r1,#0]
0004e8  2202              MOVS     r2,#2
0004ea  4391              BICS     r1,r1,r2
0004ec  4608              MOV      r0,r1
0004ee  2105              MOVS     r1,#5
0004f0  0709              LSLS     r1,r1,#28
0004f2  2207              MOVS     r2,#7
0004f4  0212              LSLS     r2,r2,#8
0004f6  1889              ADDS     r1,r1,r2
0004f8  00a2              LSLS     r2,r4,#2
0004fa  5088              STR      r0,[r1,r2]
0004fc  bf00              NOP      
0004fe  e00a              B        |L1.1302|
                  |L1.1280|
;;;339                }
;;;340                else
;;;341                {
;;;342                    nrf_gpio_cfg_input(pin,p_config->pull);
000500  7870              LDRB     r0,[r6,#1]
000502  0081              LSLS     r1,r0,#2
000504  2205              MOVS     r2,#5
000506  0712              LSLS     r2,r2,#28
000508  2307              MOVS     r3,#7
00050a  021b              LSLS     r3,r3,#8
00050c  18d2              ADDS     r2,r2,r3
00050e  00a3              LSLS     r3,r4,#2
000510  50d1              STR      r1,[r2,r3]
000512  bf00              NOP      
000514  bf00              NOP      
                  |L1.1302|
;;;343                }
;;;344    
;;;345                if (p_config->hi_accuracy)
000516  78f0              LDRB     r0,[r6,#3]
000518  2800              CMP      r0,#0
00051a  d026              BEQ      |L1.1386|
;;;346                {
;;;347                    nrf_gpiote_event_configure(channel, pin,p_config->sense);
00051c  7837              LDRB     r7,[r6,#0]
00051e  48cc              LDR      r0,|L1.2128|
000520  2151              MOVS     r1,#0x51
000522  0109              LSLS     r1,r1,#4
000524  1840              ADDS     r0,r0,r1
000526  00a9              LSLS     r1,r5,#2
000528  5840              LDR      r0,[r0,r1]
00052a  49cb              LDR      r1,|L1.2136|
00052c  4008              ANDS     r0,r0,r1
00052e  49c8              LDR      r1,|L1.2128|
000530  2251              MOVS     r2,#0x51
000532  0112              LSLS     r2,r2,#4
000534  1889              ADDS     r1,r1,r2
000536  00aa              LSLS     r2,r5,#2
000538  5088              STR      r0,[r1,r2]
00053a  48c5              LDR      r0,|L1.2128|
00053c  2151              MOVS     r1,#0x51
00053e  0109              LSLS     r1,r1,#4
000540  1840              ADDS     r0,r0,r1
000542  00a9              LSLS     r1,r5,#2
000544  5841              LDR      r1,[r0,r1]
000546  0220              LSLS     r0,r4,#8
000548  221f              MOVS     r2,#0x1f
00054a  0212              LSLS     r2,r2,#8
00054c  4010              ANDS     r0,r0,r2
00054e  043a              LSLS     r2,r7,#16
000550  2303              MOVS     r3,#3
000552  041b              LSLS     r3,r3,#16
000554  401a              ANDS     r2,r2,r3
000556  4310              ORRS     r0,r0,r2
000558  4301              ORRS     r1,r1,r0
00055a  48bd              LDR      r0,|L1.2128|
00055c  2251              MOVS     r2,#0x51
00055e  0112              LSLS     r2,r2,#4
000560  1880              ADDS     r0,r0,r2
000562  00aa              LSLS     r2,r5,#2
000564  5081              STR      r1,[r0,r2]
000566  bf00              NOP      
000568  e00c              B        |L1.1412|
                  |L1.1386|
;;;348                }
;;;349                else
;;;350                {
;;;351                    m_cb.handlers_to_pins[channel-NUMBER_OF_GPIO_TE] |= (p_config->sense)<< SENSE_FIELD_POS;
00056a  1f28              SUBS     r0,r5,#4
00056c  49bb              LDR      r1,|L1.2140|
00056e  5c08              LDRB     r0,[r1,r0]
000570  7831              LDRB     r1,[r6,#0]
000572  0189              LSLS     r1,r1,#6
000574  4308              ORRS     r0,r0,r1
000576  b242              SXTB     r2,r0
000578  1f28              SUBS     r0,r5,#4
00057a  49b8              LDR      r1,|L1.2140|
00057c  540a              STRB     r2,[r1,r0]
00057e  e001              B        |L1.1412|
                  |L1.1408|
;;;352                }
;;;353            }
;;;354            else
;;;355            {
;;;356                result = NRF_ERROR_NO_MEM;
000580  2004              MOVS     r0,#4
000582  9001              STR      r0,[sp,#4]
                  |L1.1412|
;;;357            }
;;;358        }
000584  bf00              NOP      
                  |L1.1414|
;;;359        return result;
000586  9801              LDR      r0,[sp,#4]
;;;360    }
000588  b005              ADD      sp,sp,#0x14
00058a  bdf0              POP      {r4-r7,pc}
;;;361    
                          ENDP

                  nrf_drv_gpiote_in_event_enable PROC
;;;362    void nrf_drv_gpiote_in_event_enable(nrf_drv_gpiote_pin_t pin, bool int_enable)
00058c  b5fe              PUSH     {r1-r7,lr}
;;;363    {
00058e  4605              MOV      r5,r0
000590  460e              MOV      r6,r1
;;;364        ASSERT(pin < NUMBER_OF_PINS);
;;;365        ASSERT(pin_in_use_by_gpiote(pin));
;;;366        if (pin_in_use_by_port(pin))
000592  4628              MOV      r0,r5
000594  f7fffffe          BL       pin_in_use_by_port
000598  2800              CMP      r0,#0
00059a  d022              BEQ      |L1.1506|
;;;367        {
;;;368            uint8_t pin_and_sense = pin_from_port_get(channel_port_get(pin)-NUMBER_OF_GPIO_TE);
00059c  4628              MOV      r0,r5
00059e  f7fffffe          BL       channel_port_get
0005a2  1f00              SUBS     r0,r0,#4
0005a4  9000              STR      r0,[sp,#0]
0005a6  f7fffffe          BL       pin_from_port_get
0005aa  4607              MOV      r7,r0
;;;369            nrf_gpiote_polarity_t polarity = (nrf_gpiote_polarity_t)(pin_and_sense >> SENSE_FIELD_POS);
0005ac  11bc              ASRS     r4,r7,#6
;;;370            nrf_gpio_pin_sense_t sense;
;;;371            if (polarity == NRF_GPIOTE_POLARITY_TOGGLE)
0005ae  2c03              CMP      r4,#3
0005b0  d10c              BNE      |L1.1484|
;;;372            {
;;;373                /* read current pin state and set for next sense to oposit */
;;;374                sense = (nrf_gpio_pins_read() & (1 << pin)) ?
0005b2  bf00              NOP      
0005b4  48aa              LDR      r0,|L1.2144|
0005b6  6900              LDR      r0,[r0,#0x10]
0005b8  2101              MOVS     r1,#1
0005ba  40a9              LSLS     r1,r1,r5
0005bc  4008              ANDS     r0,r0,r1
0005be  2800              CMP      r0,#0
0005c0  d001              BEQ      |L1.1478|
;;;375                        NRF_GPIO_PIN_SENSE_LOW : NRF_GPIO_PIN_SENSE_HIGH;
0005c2  2003              MOVS     r0,#3
0005c4  e000              B        |L1.1480|
                  |L1.1478|
0005c6  2002              MOVS     r0,#2
                  |L1.1480|
0005c8  9001              STR      r0,[sp,#4]
0005ca  e005              B        |L1.1496|
                  |L1.1484|
;;;376            }
;;;377            else
;;;378            {
;;;379                sense = (polarity == NRF_GPIOTE_POLARITY_LOTOHI) ?
0005cc  2c01              CMP      r4,#1
0005ce  d101              BNE      |L1.1492|
;;;380                        NRF_GPIO_PIN_SENSE_HIGH : NRF_GPIO_PIN_SENSE_LOW;
0005d0  2002              MOVS     r0,#2
0005d2  e000              B        |L1.1494|
                  |L1.1492|
0005d4  2003              MOVS     r0,#3
                  |L1.1494|
0005d6  9001              STR      r0,[sp,#4]
                  |L1.1496|
;;;381            }
;;;382            nrf_gpio_cfg_sense_set(pin,sense);
0005d8  4628              MOV      r0,r5
0005da  9901              LDR      r1,[sp,#4]
0005dc  f7fffffe          BL       nrf_gpio_cfg_sense_set
;;;383        }
0005e0  e027              B        |L1.1586|
                  |L1.1506|
;;;384        else if(pin_in_use_by_te(pin))
0005e2  4628              MOV      r0,r5
0005e4  f7fffffe          BL       pin_in_use_by_te
0005e8  2800              CMP      r0,#0
0005ea  d022              BEQ      |L1.1586|
;;;385        {
;;;386            int32_t channel = (int32_t)channel_port_get(pin);
0005ec  4628              MOV      r0,r5
0005ee  f7fffffe          BL       channel_port_get
0005f2  4604              MOV      r4,r0
;;;387            nrf_gpiote_events_t event = (nrf_gpiote_events_t)((uint32_t)NRF_GPIOTE_EVENTS_IN_0+4*channel);
0005f4  00a0              LSLS     r0,r4,#2
0005f6  30ff              ADDS     r0,r0,#0xff
0005f8  3001              ADDS     r0,#1
0005fa  b287              UXTH     r7,r0
;;;388            nrf_gpiote_event_enable(channel);
0005fc  4620              MOV      r0,r4
0005fe  4994              LDR      r1,|L1.2128|
000600  2251              MOVS     r2,#0x51
000602  0112              LSLS     r2,r2,#4
000604  1889              ADDS     r1,r1,r2
000606  0082              LSLS     r2,r0,#2
000608  5889              LDR      r1,[r1,r2]
00060a  2201              MOVS     r2,#1
00060c  4311              ORRS     r1,r1,r2
00060e  4a90              LDR      r2,|L1.2128|
000610  2351              MOVS     r3,#0x51
000612  011b              LSLS     r3,r3,#4
000614  18d2              ADDS     r2,r2,r3
000616  0083              LSLS     r3,r0,#2
000618  50d1              STR      r1,[r2,r3]
00061a  bf00              NOP      
;;;389    
;;;390            nrf_gpiote_event_clear(event);
00061c  4638              MOV      r0,r7
00061e  f7fffffe          BL       nrf_gpiote_event_clear
;;;391            if (int_enable)
000622  2e00              CMP      r6,#0
000624  d004              BEQ      |L1.1584|
;;;392            {
;;;393                nrf_gpiote_int_enable(1 << channel);
000626  2101              MOVS     r1,#1
000628  40a1              LSLS     r1,r1,r4
00062a  4608              MOV      r0,r1
00062c  f7fffffe          BL       nrf_gpiote_int_enable
                  |L1.1584|
;;;394            }
;;;395        }
000630  bf00              NOP      
                  |L1.1586|
;;;396    }
000632  bdfe              POP      {r1-r7,pc}
;;;397    
                          ENDP

                  nrf_drv_gpiote_in_is_set PROC
;;;427    
;;;428    bool nrf_drv_gpiote_in_is_set(nrf_drv_gpiote_pin_t pin)
000634  4601              MOV      r1,r0
;;;429    {
;;;430        ASSERT(pin < NUMBER_OF_PINS);
;;;431        return nrf_gpio_pin_read(pin) ? true : false;
000636  bf00              NOP      
000638  4889              LDR      r0,|L1.2144|
00063a  6900              LDR      r0,[r0,#0x10]
00063c  40c8              LSRS     r0,r0,r1
00063e  07c0              LSLS     r0,r0,#31
000640  0fc0              LSRS     r0,r0,#31
000642  2800              CMP      r0,#0
000644  d001              BEQ      |L1.1610|
000646  2001              MOVS     r0,#1
                  |L1.1608|
;;;432    }
000648  4770              BX       lr
                  |L1.1610|
00064a  2000              MOVS     r0,#0                 ;431
00064c  e7fc              B        |L1.1608|
;;;433    
                          ENDP

                  nrf_drv_gpiote_in_event_addr_get PROC
;;;434    uint32_t nrf_drv_gpiote_in_event_addr_get(nrf_drv_gpiote_pin_t pin)
00064e  b570              PUSH     {r4-r6,lr}
;;;435    {
000650  4604              MOV      r4,r0
;;;436        ASSERT(pin < NUMBER_OF_PINS);
;;;437        ASSERT(pin_in_use_by_te(pin));
;;;438    
;;;439        nrf_gpiote_events_t event = (nrf_gpiote_events_t)((uint32_t)NRF_GPIOTE_EVENTS_IN_0+(4*channel_port_get(pin)));
000652  4620              MOV      r0,r4
000654  f7fffffe          BL       channel_port_get
000658  0080              LSLS     r0,r0,#2
00065a  30ff              ADDS     r0,r0,#0xff
00065c  3001              ADDS     r0,#1
00065e  b285              UXTH     r5,r0
;;;440        return nrf_gpiote_event_addr_get(event);
000660  4628              MOV      r0,r5
000662  f7fffffe          BL       nrf_gpiote_event_addr_get
;;;441    }
000666  bd70              POP      {r4-r6,pc}
;;;442    
                          ENDP

                  GPIOTE_IRQHandler PROC
;;;443    void GPIOTE_IRQHandler(void)
000668  b5f0              PUSH     {r4-r7,lr}
;;;444    {
00066a  b087              SUB      sp,sp,#0x1c
;;;445        uint32_t status = 0;
00066c  2600              MOVS     r6,#0
;;;446        uint32_t input = 0;
00066e  2000              MOVS     r0,#0
000670  9006              STR      r0,[sp,#0x18]
;;;447    
;;;448    
;;;449        /* collect status of all GPIOTE pin events. Processing is done once all are collected and cleared.*/
;;;450        uint32_t i;
;;;451        nrf_gpiote_events_t event = NRF_GPIOTE_EVENTS_IN_0;
000672  20ff              MOVS     r0,#0xff
000674  3001              ADDS     r0,#1
000676  9005              STR      r0,[sp,#0x14]
;;;452        uint32_t mask = (uint32_t)NRF_GPIOTE_INT_IN0_MASK;
000678  2501              MOVS     r5,#1
;;;453        for (i = 0; i < NUMBER_OF_GPIO_TE; i++)
00067a  2400              MOVS     r4,#0
00067c  e017              B        |L1.1710|
                  |L1.1662|
;;;454        {
;;;455            if (nrf_gpiote_event_is_set(event) && nrf_gpiote_int_is_enabled(1 << i))
00067e  9805              LDR      r0,[sp,#0x14]
000680  f7fffffe          BL       nrf_gpiote_event_is_set
000684  2800              CMP      r0,#0
000686  d00c              BEQ      |L1.1698|
000688  2001              MOVS     r0,#1
00068a  40a0              LSLS     r0,r0,r4
00068c  4975              LDR      r1,|L1.2148|
00068e  6849              LDR      r1,[r1,#4]
000690  4001              ANDS     r1,r1,r0
000692  2900              CMP      r1,#0
000694  d005              BEQ      |L1.1698|
;;;456            {
;;;457                nrf_gpiote_event_clear(event);
000696  9805              LDR      r0,[sp,#0x14]
000698  f7fffffe          BL       nrf_gpiote_event_clear
;;;458                status |= mask;
00069c  4630              MOV      r0,r6
00069e  4328              ORRS     r0,r0,r5
0006a0  4606              MOV      r6,r0
                  |L1.1698|
;;;459            }
;;;460            mask <<= 1;
0006a2  006d              LSLS     r5,r5,#1
;;;461            event = (nrf_gpiote_events_t)((uint32_t)event + 4);
0006a4  9805              LDR      r0,[sp,#0x14]
0006a6  1d00              ADDS     r0,r0,#4
0006a8  b280              UXTH     r0,r0
0006aa  9005              STR      r0,[sp,#0x14]
0006ac  1c64              ADDS     r4,r4,#1              ;453
                  |L1.1710|
0006ae  2c04              CMP      r4,#4                 ;453
0006b0  d3e5              BCC      |L1.1662|
;;;462        }
;;;463    
;;;464        /* collect PORT status event, if event is set read pins state. Processing is postponed to the
;;;465         * end of interrupt. */
;;;466        if (nrf_gpiote_event_is_set(NRF_GPIOTE_EVENTS_PORT))
0006b2  20ff              MOVS     r0,#0xff
0006b4  307d              ADDS     r0,r0,#0x7d
0006b6  f7fffffe          BL       nrf_gpiote_event_is_set
0006ba  2800              CMP      r0,#0
0006bc  d00a              BEQ      |L1.1748|
;;;467        {
;;;468            nrf_gpiote_event_clear(NRF_GPIOTE_EVENTS_PORT);
0006be  20ff              MOVS     r0,#0xff
0006c0  307d              ADDS     r0,r0,#0x7d
0006c2  f7fffffe          BL       nrf_gpiote_event_clear
;;;469            status |= (uint32_t)NRF_GPIOTE_INT_PORT_MASK;
0006c6  2001              MOVS     r0,#1
0006c8  07c0              LSLS     r0,r0,#31
0006ca  4306              ORRS     r6,r6,r0
;;;470            input = nrf_gpio_pins_read();
0006cc  bf00              NOP      
0006ce  4864              LDR      r0,|L1.2144|
0006d0  6900              LDR      r0,[r0,#0x10]
0006d2  9006              STR      r0,[sp,#0x18]
                  |L1.1748|
;;;471        }
;;;472    
;;;473        /* Process pin events. */
;;;474        if (status & NRF_GPIOTE_INT_IN_MASK)
0006d4  0730              LSLS     r0,r6,#28
0006d6  0f00              LSRS     r0,r0,#28
0006d8  2800              CMP      r0,#0
0006da  d02a              BEQ      |L1.1842|
;;;475        {
;;;476            mask = 1;
0006dc  2501              MOVS     r5,#1
;;;477            for (i = 0; i < NUMBER_OF_GPIO_TE; i++)
0006de  2400              MOVS     r4,#0
0006e0  e025              B        |L1.1838|
                  |L1.1762|
;;;478            {
;;;479                if (mask & status)
0006e2  4628              MOV      r0,r5
0006e4  4030              ANDS     r0,r0,r6
0006e6  2800              CMP      r0,#0
0006e8  d01f              BEQ      |L1.1834|
;;;480                {
;;;481                    nrf_drv_gpiote_pin_t pin = nrf_gpiote_event_pin_get(i);
0006ea  bf00              NOP      
0006ec  4858              LDR      r0,|L1.2128|
0006ee  2151              MOVS     r1,#0x51
0006f0  0109              LSLS     r1,r1,#4
0006f2  1840              ADDS     r0,r0,r1
0006f4  00a1              LSLS     r1,r4,#2
0006f6  5840              LDR      r0,[r0,r1]
0006f8  211f              MOVS     r1,#0x1f
0006fa  0209              LSLS     r1,r1,#8
0006fc  4008              ANDS     r0,r0,r1
0006fe  0a00              LSRS     r0,r0,#8
000700  9004              STR      r0,[sp,#0x10]
;;;482                    nrf_gpiote_polarity_t polarity = nrf_gpiote_event_polarity_get(i);
000702  bf00              NOP      
000704  4852              LDR      r0,|L1.2128|
000706  2151              MOVS     r1,#0x51
000708  0109              LSLS     r1,r1,#4
00070a  1840              ADDS     r0,r0,r1
00070c  00a1              LSLS     r1,r4,#2
00070e  5840              LDR      r0,[r0,r1]
000710  2103              MOVS     r1,#3
000712  0409              LSLS     r1,r1,#16
000714  4008              ANDS     r0,r0,r1
000716  0c00              LSRS     r0,r0,#16
000718  9003              STR      r0,[sp,#0xc]
;;;483                    nrf_drv_gpiote_evt_handler_t handler = channel_handler_get(i);
00071a  4620              MOV      r0,r4
00071c  f7fffffe          BL       channel_handler_get
000720  4607              MOV      r7,r0
;;;484                    handler(pin,polarity);
000722  9903              LDR      r1,[sp,#0xc]
000724  9804              LDR      r0,[sp,#0x10]
000726  47b8              BLX      r7
;;;485                }
000728  bf00              NOP      
                  |L1.1834|
;;;486                mask <<= 1;
00072a  006d              LSLS     r5,r5,#1
00072c  1c64              ADDS     r4,r4,#1              ;477
                  |L1.1838|
00072e  2c04              CMP      r4,#4                 ;477
000730  d3d7              BCC      |L1.1762|
                  |L1.1842|
;;;487            }
;;;488        }
;;;489    
;;;490        if (status & (uint32_t)NRF_GPIOTE_INT_PORT_MASK)
000732  0ff0              LSRS     r0,r6,#31
000734  07c0              LSLS     r0,r0,#31
000736  2800              CMP      r0,#0
000738  d052              BEQ      |L1.2016|
;;;491        {
;;;492            /* Process port event. */
;;;493            for (i = 0; i < GPIOTE_CONFIG_NUM_OF_LOW_POWER_EVENTS; i++)
00073a  2400              MOVS     r4,#0
00073c  e04e              B        |L1.2012|
                  |L1.1854|
;;;494            {
;;;495                uint8_t pin_and_sense = pin_from_port_get(i);
00073e  4620              MOV      r0,r4
000740  f7fffffe          BL       pin_from_port_get
000744  9004              STR      r0,[sp,#0x10]
;;;496                nrf_drv_gpiote_pin_t pin = (pin_and_sense & ~SENSE_FIELD_MASK);
000746  21c0              MOVS     r1,#0xc0
000748  9804              LDR      r0,[sp,#0x10]
00074a  4388              BICS     r0,r0,r1
00074c  4607              MOV      r7,r0
;;;497                nrf_gpiote_polarity_t polarity =
00074e  9804              LDR      r0,[sp,#0x10]
000750  4008              ANDS     r0,r0,r1
000752  1180              ASRS     r0,r0,#6
000754  9003              STR      r0,[sp,#0xc]
;;;498                        (nrf_gpiote_polarity_t)((pin_and_sense & SENSE_FIELD_MASK) >> SENSE_FIELD_POS);
;;;499                mask = 1 << pin;
000756  2001              MOVS     r0,#1
000758  40b8              LSLS     r0,r0,r7
00075a  4605              MOV      r5,r0
;;;500                if (pin_in_use_by_port(pin))
00075c  4638              MOV      r0,r7
00075e  f7fffffe          BL       pin_in_use_by_port
000762  2800              CMP      r0,#0
000764  d039              BEQ      |L1.2010|
;;;501                {
;;;502                    nrf_drv_gpiote_evt_handler_t handler = channel_handler_get(channel_port_get(pin));
000766  4638              MOV      r0,r7
000768  f7fffffe          BL       channel_port_get
00076c  9001              STR      r0,[sp,#4]
00076e  f7fffffe          BL       channel_handler_get
000772  9002              STR      r0,[sp,#8]
;;;503                    if (handler)
000774  9802              LDR      r0,[sp,#8]
000776  2800              CMP      r0,#0
000778  d02e              BEQ      |L1.2008|
;;;504                    {
;;;505                        nrf_gpio_pin_sense_t sense = nrf_gpio_pin_sense_get(pin);
00077a  bf00              NOP      
00077c  2005              MOVS     r0,#5
00077e  0700              LSLS     r0,r0,#28
000780  2107              MOVS     r1,#7
000782  0209              LSLS     r1,r1,#8
000784  1840              ADDS     r0,r0,r1
000786  00b9              LSLS     r1,r7,#2
000788  5840              LDR      r0,[r0,r1]
00078a  2103              MOVS     r1,#3
00078c  0409              LSLS     r1,r1,#16
00078e  4008              ANDS     r0,r0,r1
000790  0c00              LSRS     r0,r0,#16
000792  9001              STR      r0,[sp,#4]
;;;506                        if (((mask & input) && (sense==NRF_GPIO_PIN_SENSE_HIGH)) ||
000794  9806              LDR      r0,[sp,#0x18]
000796  4028              ANDS     r0,r0,r5
000798  2800              CMP      r0,#0
00079a  d002              BEQ      |L1.1954|
00079c  9801              LDR      r0,[sp,#4]
00079e  2802              CMP      r0,#2
0007a0  d006              BEQ      |L1.1968|
                  |L1.1954|
;;;507                           (!(mask & input) && (sense==NRF_GPIO_PIN_SENSE_LOW))  )
0007a2  9806              LDR      r0,[sp,#0x18]
0007a4  4028              ANDS     r0,r0,r5
0007a6  2800              CMP      r0,#0
0007a8  d115              BNE      |L1.2006|
0007aa  9801              LDR      r0,[sp,#4]
0007ac  2803              CMP      r0,#3
0007ae  d112              BNE      |L1.2006|
                  |L1.1968|
;;;508                        {
;;;509                            if (polarity == NRF_GPIOTE_POLARITY_TOGGLE)
0007b0  9803              LDR      r0,[sp,#0xc]
0007b2  2803              CMP      r0,#3
0007b4  d10b              BNE      |L1.1998|
;;;510                            {
;;;511                                nrf_gpio_pin_sense_t next_sense = (sense == NRF_GPIO_PIN_SENSE_HIGH) ?
0007b6  9801              LDR      r0,[sp,#4]
0007b8  2802              CMP      r0,#2
0007ba  d101              BNE      |L1.1984|
;;;512                                        NRF_GPIO_PIN_SENSE_LOW : NRF_GPIO_PIN_SENSE_HIGH;
0007bc  2003              MOVS     r0,#3
0007be  e000              B        |L1.1986|
                  |L1.1984|
0007c0  2002              MOVS     r0,#2
                  |L1.1986|
0007c2  9000              STR      r0,[sp,#0]
;;;513                                nrf_gpio_cfg_sense_set(pin, next_sense);
0007c4  4638              MOV      r0,r7
0007c6  9900              LDR      r1,[sp,#0]
0007c8  f7fffffe          BL       nrf_gpio_cfg_sense_set
;;;514                            }
0007cc  bf00              NOP      
                  |L1.1998|
;;;515                            handler(pin, polarity);
0007ce  4638              MOV      r0,r7
0007d0  9a02              LDR      r2,[sp,#8]
0007d2  9903              LDR      r1,[sp,#0xc]
0007d4  4790              BLX      r2
                  |L1.2006|
;;;516                        }
;;;517                    }
0007d6  bf00              NOP      
                  |L1.2008|
;;;518                }
0007d8  bf00              NOP      
                  |L1.2010|
0007da  1c64              ADDS     r4,r4,#1              ;493
                  |L1.2012|
0007dc  2c06              CMP      r4,#6                 ;493
0007de  d3ae              BCC      |L1.1854|
                  |L1.2016|
;;;519            }
;;;520        }
;;;521    }
0007e0  b007              ADD      sp,sp,#0x1c
0007e2  bdf0              POP      {r4-r7,pc}
;;;522    //lint -restore
                          ENDP

                  nrf_gpiote_event_addr_get PROC
;;;243    
;;;244    __STATIC_INLINE uint32_t nrf_gpiote_event_addr_get(nrf_gpiote_events_t event)
0007e4  4601              MOV      r1,r0
;;;245    {
;;;246        return ((uint32_t)NRF_GPIOTE + event);
0007e6  481a              LDR      r0,|L1.2128|
0007e8  1808              ADDS     r0,r1,r0
;;;247    }
0007ea  4770              BX       lr
;;;248    
                          ENDP

                  nrf_gpiote_event_is_set PROC
;;;233    
;;;234    __STATIC_INLINE bool nrf_gpiote_event_is_set(nrf_gpiote_events_t event)
0007ec  b510              PUSH     {r4,lr}
;;;235    {
0007ee  4604              MOV      r4,r0
;;;236        return (*(uint32_t *)nrf_gpiote_event_addr_get(event) == 0x1UL) ? true : false;
0007f0  4620              MOV      r0,r4
0007f2  f7fffffe          BL       nrf_gpiote_event_addr_get
0007f6  6800              LDR      r0,[r0,#0]
0007f8  2801              CMP      r0,#1
0007fa  d100              BNE      |L1.2046|
                  |L1.2044|
;;;237    }
0007fc  bd10              POP      {r4,pc}
                  |L1.2046|
0007fe  2000              MOVS     r0,#0                 ;236
000800  e7fc              B        |L1.2044|
;;;238    
                          ENDP

                  nrf_gpiote_event_clear PROC
;;;239    __STATIC_INLINE void nrf_gpiote_event_clear(nrf_gpiote_events_t event)
000802  b510              PUSH     {r4,lr}
;;;240    {
000804  4604              MOV      r4,r0
;;;241        *(uint32_t *)nrf_gpiote_event_addr_get(event) = 0;
000806  4620              MOV      r0,r4
000808  f7fffffe          BL       nrf_gpiote_event_addr_get
00080c  2100              MOVS     r1,#0
00080e  6001              STR      r1,[r0,#0]
;;;242    }
000810  bd10              POP      {r4,pc}
;;;243    
                          ENDP

                  nrf_gpiote_int_enable PROC
;;;248    
;;;249    __STATIC_INLINE void nrf_gpiote_int_enable(uint32_t mask)
000812  4914              LDR      r1,|L1.2148|
;;;250    {
;;;251        NRF_GPIOTE->INTENSET = mask;
000814  6048              STR      r0,[r1,#4]
;;;252    }
000816  4770              BX       lr
;;;253    
                          ENDP

                  nrf_gpio_cfg_default PROC
;;;395    
;;;396    __STATIC_INLINE void nrf_gpio_cfg_default(uint32_t pin_number)
000818  2102              MOVS     r1,#2
;;;397    {
;;;398        /*lint -e{845} // A zero has been given as right argument to operator '|'" */
;;;399        NRF_GPIO->PIN_CNF[pin_number] = (GPIO_PIN_CNF_SENSE_Disabled << GPIO_PIN_CNF_SENSE_Pos)
00081a  2205              MOVS     r2,#5
00081c  0712              LSLS     r2,r2,#28
00081e  2307              MOVS     r3,#7
000820  021b              LSLS     r3,r3,#8
000822  18d2              ADDS     r2,r2,r3
000824  0083              LSLS     r3,r0,#2
000826  50d1              STR      r1,[r2,r3]
;;;400                                            | (GPIO_PIN_CNF_DRIVE_S0S1 << GPIO_PIN_CNF_DRIVE_Pos)
;;;401                                            | (NRF_GPIO_PIN_NOPULL << GPIO_PIN_CNF_PULL_Pos)
;;;402                                            | (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos)
;;;403                                            | (GPIO_PIN_CNF_DIR_Input << GPIO_PIN_CNF_DIR_Pos);
;;;404    }
000828  4770              BX       lr
;;;405    
                          ENDP

                  nrf_gpio_pin_set PROC
;;;454    
;;;455    __STATIC_INLINE void nrf_gpio_pin_set(uint32_t pin_number)
00082a  2101              MOVS     r1,#1
;;;456    {
;;;457        NRF_GPIO->OUTSET = (1UL << pin_number);
00082c  4081              LSLS     r1,r1,r0
00082e  4a0c              LDR      r2,|L1.2144|
000830  6091              STR      r1,[r2,#8]
;;;458    }
000832  4770              BX       lr
;;;459    
                          ENDP

                  nrf_gpio_pin_clear PROC
;;;460    __STATIC_INLINE void nrf_gpio_pin_clear(uint32_t pin_number)
000834  2101              MOVS     r1,#1
;;;461    {
;;;462        NRF_GPIO->OUTCLR = (1UL << pin_number);
000836  4081              LSLS     r1,r1,r0
000838  4a09              LDR      r2,|L1.2144|
00083a  60d1              STR      r1,[r2,#0xc]
;;;463    }
00083c  4770              BX       lr
;;;464    
                          ENDP

                  pin_in_use_by_port PROC
;;;51     
;;;52     __STATIC_INLINE bool pin_in_use_by_port(uint32_t pin)
00083e  4601              MOV      r1,r0
;;;53     {
;;;54         return (m_cb.pin_assignments[pin] >= NUMBER_OF_GPIO_TE) ? true : false;
000840  4806              LDR      r0,|L1.2140|
000842  3820              SUBS     r0,r0,#0x20
000844  5640              LDRSB    r0,[r0,r1]
000846  2804              CMP      r0,#4
000848  db0e              BLT      |L1.2152|
00084a  2001              MOVS     r0,#1
                  |L1.2124|
;;;55     }
00084c  4770              BX       lr
00084e  0000              DCW      0x0000
                  |L1.2128|
                          DCD      0x40006000
                  |L1.2132|
                          DCD      0x50000700
                  |L1.2136|
                          DCD      0xfffce0ff
                  |L1.2140|
                          DCD      m_cb+0x4c
                  |L1.2144|
                          DCD      0x50000500
                  |L1.2148|
                          DCD      0x40006300
                  |L1.2152|
000868  2000              MOVS     r0,#0                 ;54
00086a  e7ef              B        |L1.2124|
;;;56     
                          ENDP

                  pin_in_use_by_gpiote PROC
;;;57     __STATIC_INLINE bool pin_in_use_by_gpiote(uint32_t pin)
00086c  4601              MOV      r1,r0
;;;58     {
;;;59         return (m_cb.pin_assignments[pin] >= 0) ? true : false;
00086e  480f              LDR      r0,|L1.2220|
000870  5640              LDRSB    r0,[r0,r1]
000872  17c0              ASRS     r0,r0,#31
000874  1c40              ADDS     r0,r0,#1
000876  2800              CMP      r0,#0
000878  d001              BEQ      |L1.2174|
00087a  2001              MOVS     r0,#1
                  |L1.2172|
;;;60     }
00087c  4770              BX       lr
                  |L1.2174|
00087e  2000              MOVS     r0,#0                 ;59
000880  e7fc              B        |L1.2172|
;;;61     
                          ENDP

                  pin_in_use_clear PROC
;;;79     
;;;80     __STATIC_INLINE void pin_in_use_clear(uint32_t pin)
000882  2200              MOVS     r2,#0
;;;81     {
;;;82         m_cb.pin_assignments[pin] = PIN_NOT_USED;
000884  43d2              MVNS     r2,r2
000886  4909              LDR      r1,|L1.2220|
000888  540a              STRB     r2,[r1,r0]
;;;83     }
00088a  4770              BX       lr
;;;84     
                          ENDP

                  channel_port_get PROC
;;;85     __STATIC_INLINE int8_t channel_port_get(uint32_t pin)
00088c  4601              MOV      r1,r0
;;;86     {
;;;87         return m_cb.pin_assignments[pin];
00088e  4807              LDR      r0,|L1.2220|
000890  5640              LDRSB    r0,[r0,r1]
;;;88     }
000892  4770              BX       lr
;;;89     
                          ENDP

                  pin_from_port_get PROC
;;;90     __STATIC_INLINE uint8_t pin_from_port_get(uint32_t port_channel)
000894  4601              MOV      r1,r0
;;;91     {
;;;92         return m_cb.handlers_to_pins[port_channel];
000896  4805              LDR      r0,|L1.2220|
000898  3020              ADDS     r0,r0,#0x20
00089a  5c40              LDRB     r0,[r0,r1]
;;;93     }
00089c  4770              BX       lr
;;;94     
                          ENDP

                  channel_handler_get PROC
;;;95     __STATIC_INLINE nrf_drv_gpiote_evt_handler_t channel_handler_get(uint32_t channel)
00089e  4601              MOV      r1,r0
;;;96     {
;;;97         return m_cb.handlers[channel];
0008a0  008a              LSLS     r2,r1,#2
0008a2  4802              LDR      r0,|L1.2220|
0008a4  3828              SUBS     r0,r0,#0x28
0008a6  5880              LDR      r0,[r0,r2]
;;;98     }
0008a8  4770              BX       lr
;;;99     
                          ENDP

0008aa  0000              DCW      0x0000
                  |L1.2220|
                          DCD      m_cb+0x2c

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_cb
                          %        84

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\drivers_nrf\\gpiote\\nrf_drv_gpiote.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_nrf_drv_gpiote_c_875a4e72____REV16|
#line 129 "..\\..\\..\\..\\..\\..\\components\\toolchain\\gcc\\core_cmInstr.h"
|__asm___16_nrf_drv_gpiote_c_875a4e72____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_nrf_drv_gpiote_c_875a4e72____REVSH|
#line 144
|__asm___16_nrf_drv_gpiote_c_875a4e72____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
