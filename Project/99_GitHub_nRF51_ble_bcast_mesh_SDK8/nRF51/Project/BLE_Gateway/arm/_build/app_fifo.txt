; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\_build\app_fifo.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\app_fifo.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\include -I..\..\..\rbc_mesh -I..\..\..\rbc_mesh\include -I..\..\..\SDK\bsp -I..\..\..\..\..\..\components\softdevice\s110\headers -I..\..\..\..\..\..\components\toolchain\gcc -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\spi_slave -I..\..\..\..\..\..\components\softdevice\common\softdevice_handler -I..\..\..\..\..\..\components\libraries\fifo -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\config -I..\..\..\..\..\..\components\drivers_nrf\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\7.2.1\Device\Include -D__MICROLIB -DNRF51 -DBOARD_RHC -DNRF51 -DBLE_STACK_SUPPORT_REQD -DS110 -DSOFTDEVICE_PRESENT --omf_browse=.\_build\app_fifo.crf ..\..\..\..\..\..\components\libraries\fifo\app_fifo.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  app_fifo_init PROC
;;;25     
;;;26     uint32_t app_fifo_init(app_fifo_t * p_fifo, uint8_t * p_buf, uint16_t buf_size)
000000  4603              MOV      r3,r0
;;;27     {
;;;28         // Check buffer for null pointer.
;;;29         if (p_buf == NULL)
000002  2900              CMP      r1,#0
000004  d101              BNE      |L1.10|
;;;30         {
;;;31             return NRF_ERROR_NULL;
000006  200e              MOVS     r0,#0xe
                  |L1.8|
;;;32         }
;;;33     
;;;34         // Check that the buffer size is a power of two.
;;;35         if (!IS_POWER_OF_TWO(buf_size))
;;;36         {
;;;37             return NRF_ERROR_INVALID_LENGTH;
;;;38         }
;;;39     
;;;40         p_fifo->p_buf         = p_buf;
;;;41         p_fifo->buf_size_mask = buf_size - 1;
;;;42         p_fifo->read_pos      = 0;
;;;43         p_fifo->write_pos     = 0;
;;;44     
;;;45         return NRF_SUCCESS;
;;;46     }
000008  4770              BX       lr
                  |L1.10|
00000a  2a00              CMP      r2,#0                 ;35
00000c  d003              BEQ      |L1.22|
00000e  1e50              SUBS     r0,r2,#1              ;35
000010  4010              ANDS     r0,r0,r2              ;35
000012  2800              CMP      r0,#0                 ;35
000014  d001              BEQ      |L1.26|
                  |L1.22|
000016  2009              MOVS     r0,#9                 ;37
000018  e7f6              B        |L1.8|
                  |L1.26|
00001a  6019              STR      r1,[r3,#0]            ;40
00001c  1e50              SUBS     r0,r2,#1              ;41
00001e  8098              STRH     r0,[r3,#4]            ;41
000020  2000              MOVS     r0,#0                 ;42
000022  6098              STR      r0,[r3,#8]            ;42
000024  60d8              STR      r0,[r3,#0xc]          ;43
000026  bf00              NOP                            ;45
000028  e7ee              B        |L1.8|
;;;47     
                          ENDP

                  app_fifo_put PROC
;;;48     
;;;49     uint32_t app_fifo_put(app_fifo_t * p_fifo, uint8_t byte)
00002a  b570              PUSH     {r4-r6,lr}
;;;50     {
00002c  4604              MOV      r4,r0
00002e  460d              MOV      r5,r1
;;;51         if (FIFO_LENGTH <= p_fifo->buf_size_mask)
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       fifo_length
000036  88a1              LDRH     r1,[r4,#4]
000038  4288              CMP      r0,r1
00003a  d809              BHI      |L1.80|
;;;52         {
;;;53             p_fifo->p_buf[p_fifo->write_pos & p_fifo->buf_size_mask] = byte;
00003c  68e0              LDR      r0,[r4,#0xc]
00003e  88a1              LDRH     r1,[r4,#4]
000040  4008              ANDS     r0,r0,r1
000042  6821              LDR      r1,[r4,#0]
000044  540d              STRB     r5,[r1,r0]
;;;54             p_fifo->write_pos++;
000046  68e0              LDR      r0,[r4,#0xc]
000048  1c40              ADDS     r0,r0,#1
00004a  60e0              STR      r0,[r4,#0xc]
;;;55             return NRF_SUCCESS;
00004c  2000              MOVS     r0,#0
                  |L1.78|
;;;56         }
;;;57     
;;;58         return NRF_ERROR_NO_MEM;
;;;59     }
00004e  bd70              POP      {r4-r6,pc}
                  |L1.80|
000050  2004              MOVS     r0,#4                 ;58
000052  e7fc              B        |L1.78|
;;;60     
                          ENDP

                  app_fifo_get PROC
;;;61     
;;;62     uint32_t app_fifo_get(app_fifo_t * p_fifo, uint8_t * p_byte)
000054  b570              PUSH     {r4-r6,lr}
;;;63     {
000056  4604              MOV      r4,r0
000058  460d              MOV      r5,r1
;;;64         if (FIFO_LENGTH != 0)
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       fifo_length
000060  2800              CMP      r0,#0
000062  d00a              BEQ      |L1.122|
;;;65         {
;;;66             *p_byte = p_fifo->p_buf[p_fifo->read_pos & p_fifo->buf_size_mask];
000064  68a0              LDR      r0,[r4,#8]
000066  88a1              LDRH     r1,[r4,#4]
000068  4008              ANDS     r0,r0,r1
00006a  6821              LDR      r1,[r4,#0]
00006c  5c08              LDRB     r0,[r1,r0]
00006e  7028              STRB     r0,[r5,#0]
;;;67             p_fifo->read_pos++;
000070  68a0              LDR      r0,[r4,#8]
000072  1c40              ADDS     r0,r0,#1
000074  60a0              STR      r0,[r4,#8]
;;;68             return NRF_SUCCESS;
000076  2000              MOVS     r0,#0
                  |L1.120|
;;;69         }
;;;70     
;;;71         return NRF_ERROR_NOT_FOUND;
;;;72     
;;;73     }
000078  bd70              POP      {r4-r6,pc}
                  |L1.122|
00007a  2005              MOVS     r0,#5                 ;71
00007c  e7fc              B        |L1.120|
;;;74     
                          ENDP

                  app_fifo_flush PROC
;;;75     uint32_t app_fifo_flush(app_fifo_t * p_fifo)
00007e  4601              MOV      r1,r0
;;;76     {
;;;77         p_fifo->read_pos = p_fifo->write_pos;
000080  68c8              LDR      r0,[r1,#0xc]
000082  6088              STR      r0,[r1,#8]
;;;78         return NRF_SUCCESS;
000084  2000              MOVS     r0,#0
;;;79     }
000086  4770              BX       lr
                          ENDP

                  fifo_length PROC
;;;16     
;;;17     static __INLINE uint32_t fifo_length(app_fifo_t * p_fifo)
000088  4601              MOV      r1,r0
;;;18     {
;;;19       uint32_t tmp = p_fifo->read_pos;
00008a  688a              LDR      r2,[r1,#8]
;;;20       return p_fifo->write_pos - tmp;
00008c  68c8              LDR      r0,[r1,#0xc]
00008e  1a80              SUBS     r0,r0,r2
;;;21     }
000090  4770              BX       lr
;;;22     
                          ENDP

